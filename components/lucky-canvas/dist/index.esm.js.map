{"version":3,"file":"index.esm.js","sources":["../src/utils/polyfill.js","../src/utils/index.ts","../src/utils/math.ts","../src/utils/image.ts","../src/observer/dep.ts","../src/observer/utils.ts","../src/observer/array.ts","../src/observer/index.ts","../src/observer/watcher.ts","../src/lib/lucky.ts","../src/utils/tween.ts","../src/lib/wheel.ts","../src/lib/grid.ts","../src/lib/slot.ts"],"sourcesContent":["/**\n * 由于部分低版本下的某些 app 可能会缺少某些原型方法, 这里增加兼容\n */\n\n// vivo x7 下网易云游戏 app 缺少 includes 方法\nif (!String.prototype.includes) {\n  String.prototype.includes = function(search, start) {\n    'use strict';\n    if (typeof start !== 'number') {\n      start = 0;\n    }\n    if (start + search.length > this.length) {\n      return false;\n    } else {\n      return this.indexOf(search, start) !== -1;\n    }\n  };\n}\n\n// vivo x7 下网易云游戏 app 缺少 find 方法\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n     // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n      var o = Object(this);\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n      // 5. Let k be 0.\n      var k = 0;\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n      // 7. Return undefined.\n      return void 0;\n    }\n  });\n}\n","/**\n * 判断是否是期望的类型\n * @param { unknown } param 将要判断的变量\n * @param { ...string } types 期望的类型\n * @return { boolean } 返回期望是否正确\n */\nexport const isExpectType = (param: unknown, ...types: string[]): boolean => {\n  return types.some(type => Object.prototype.toString.call(param).slice(8, -1).toLowerCase() === type)\n}\n\nexport const get = (data: object, strKeys: string) => {\n  const keys = strKeys.split('.')\n  for (let key of keys) {\n    const res = data[key]\n    if (!isExpectType(res, 'object', 'array')) return res\n    data = res\n  }\n  return data\n}\n\nexport const has = (data: object, key: string | number) => {\n  return Object.prototype.hasOwnProperty.call(data, key)\n}\n\n/**\n * 移除\\n\n * @param { string } str 将要处理的字符串\n * @return { string } 返回新的字符串\n */\nexport const removeEnter = (str: string): string => {\n  return [].filter.call(str, s => s !== '\\n').join('')\n}\n\n/**\n * 把任何数据类型转成数字\n * @param num \n */\nexport const getNumber = (num: unknown): number => {\n  if (num === null) return 0\n  if (typeof num === 'object') return NaN\n  if (typeof num === 'number') return num\n  if (typeof num === 'string') {\n    if (num[num.length - 1] === '%') {\n      return Number(num.slice(0, -1)) / 100\n    }\n    return Number(num)\n  }\n  return NaN\n}\n\n/**\n * 判断颜色是否有效 (透明色 === 无效)\n * @param color 颜色\n */\nexport const hasBackground = (color: string | undefined | null): boolean => {\n  if (typeof color !== 'string') return false\n  color = color.toLocaleLowerCase().trim()\n  if (color === 'transparent') return false\n  if (/^rgba/.test(color)) {\n    const alpha = /([^\\s,]+)\\)$/.exec(color)\n    if (getNumber(alpha) === 0) return false\n  }\n  return true\n}\n\n/**\n * 通过padding计算\n * @return { object } block 边框信息\n */\nexport const computePadding = (\n  block: { padding?: string }\n): [number, number, number, number] => {\n  let padding = block.padding?.replace(/px/g, '').split(' ').map(n => ~~n) || [0],\n    paddingTop = 0,\n    paddingBottom = 0,\n    paddingLeft = 0,\n    paddingRight = 0\n  switch (padding.length) {\n    case 1:\n      paddingTop = paddingBottom = paddingLeft = paddingRight = padding[0]\n      break\n    case 2:\n      paddingTop = paddingBottom = padding[0]\n      paddingLeft = paddingRight = padding[1]\n      break\n    case 3:\n      paddingTop = padding[0]\n      paddingLeft = paddingRight = padding[1]\n      paddingBottom = padding[2]\n      break\n    default:\n      paddingTop = padding[0]\n      paddingBottom = padding[1]\n      paddingLeft = padding[2]\n      paddingRight = padding[3]\n  }\n  // 检查是否单独传入值, 并且不是0\n  const res = { paddingTop, paddingBottom, paddingLeft, paddingRight }\n  for (let key in res) {\n    // 是否含有这个属性, 并且是数字或字符串\n    res[key] = Object.prototype.hasOwnProperty.call(block, key) && isExpectType(block[key], 'string', 'number')\n      ? ~~String(block[key]).replace(/px/g, '')\n      : res[key]\n  }\n  return [paddingTop, paddingBottom, paddingLeft, paddingRight]\n}\n\n/**\n * 节流函数\n * @param fn 将要处理的函数\n * @param wait 时间, 单位为毫秒\n * @returns 包装好的节流函数\n */\nexport const throttle = (fn: Function, wait = 300) => {\n  let timeId = null as any\n  return function (this: any, ...args: any[]) {\n    if (timeId) return\n    timeId = setTimeout(() => {\n      fn.apply(this, args)\n      clearTimeout(timeId)\n      timeId = null\n    }, wait)\n  }\n}\n\n/**\n * 通过概率计算出一个奖品索引\n * @param { Array<number | undefined> } rangeArr 概率\n * @returns { number } 中奖索引\n */\nexport const computeRange = (rangeArr: Array<number | undefined>): number => {\n  const ascendingArr: number[] = []\n  // 额外增加 map 来优化 ts 的类型推断\n  const sum = rangeArr.map(num => Number(num)).reduce((prev, curr) => {\n    if (curr > 0) { // 大于0\n      const res = prev + curr\n      ascendingArr.push(res)\n      return res\n    } else { // 小于等于0或NaN\n      ascendingArr.push(NaN)\n      return prev\n    }\n  }, 0)\n  const random = Math.random() * sum\n  return ascendingArr.findIndex(num => random <= num)\n}\n\n/**\n * 根据宽度分割字符串, 来达到换行的效果\n * @param text \n * @param maxWidth \n * @returns \n */\nexport const splitText = (\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  getWidth: (lines: string[]) => number,\n  lineClamp: number = Infinity\n): string[] => {\n  // 如果 lineClamp 设置不正确, 则忽略该属性\n  if (lineClamp <= 0) lineClamp = Infinity\n  let str = ''\n  const lines = []\n  const EndWidth = ctx.measureText('...').width\n  for (let i = 0; i < text.length; i++) {\n    str += text[i]\n    let currWidth = ctx.measureText(str).width\n    const maxWidth = getWidth(lines)\n    // 如果正在计算最后一行, 则加上三个小点的宽度\n    if (lineClamp === lines.length + 1) currWidth += EndWidth\n    // 如果已经没有宽度了, 就没有必要再计算了\n    if (maxWidth < 0) return lines\n    // 如果当前一行的宽度不够了, 则处理下一行\n    if (currWidth > maxWidth) {\n      lines.push(str.slice(0, -1))\n      str = text[i]\n    }\n    // 如果现在是最后一行, 则加上三个小点并跳出\n    if (lineClamp === lines.length) {\n      lines[lines.length - 1] += '...'\n      return lines\n    }\n  }\n  if (str) lines.push(str)\n  if (!lines.length) lines.push(text)\n  return lines\n}\n\n// 获取一个重新排序的数组\nexport const getSortedArrayByIndex = <T>(arr: T[], order: number[]): T[] => {\n  const map: { [key: number]: T } = {}, res = []\n  for (let i = 0; i < arr.length; i++) {\n    map[i] = arr[i]\n  }\n  for (let i = 0; i < order.length; i++) {\n    const curr = map[order[i]]\n    if (curr) (res[i] = curr)\n  }\n  return res\n}\n","/**\n * 转换为运算角度\n * @param { number } deg 数学角度\n * @return { number } 运算角度\n */\nexport const getAngle = (deg: number): number => {\n  return Math.PI / 180 * deg\n}\n\n/**\n * 根据角度计算圆上的点\n * @param { number } deg 运算角度\n * @param { number } r 半径\n * @return { Array<number> } 坐标[x, y]\n */\nexport const getArcPointerByDeg = (deg: number, r: number): [number, number] => {\n  return [+(Math.cos(deg) * r).toFixed(8), +(Math.sin(deg) * r).toFixed(8)]\n}\n\n/**\n * 根据点计算切线方程\n * @param { number } x 横坐标\n * @param { number } y 纵坐标\n * @return { Array<number> } [斜率, 常数]\n */\nexport const getTangentByPointer = (x: number, y: number): Array<number> => {\n  let k = - x / y\n  let b = -k * x + y\n  return [k, b]\n}\n\n// 使用 arc 绘制扇形\nexport const fanShapedByArc = (\n  ctx: CanvasRenderingContext2D,\n  minRadius: number,\n  maxRadius: number,\n  start: number,\n  end: number,\n  gutter: number,\n): void => {\n  ctx.beginPath()\n  let maxGutter = getAngle(90 / Math.PI / maxRadius * gutter)\n  let minGutter = getAngle(90 / Math.PI / minRadius * gutter)\n  let maxStart = start + maxGutter\n  let maxEnd = end - maxGutter\n  let minStart = start + minGutter\n  let minEnd = end - minGutter\n  ctx.arc(0, 0, maxRadius, maxStart, maxEnd, false)\n  // 如果 getter 比按钮短就绘制圆弧, 反之计算新的坐标点\n  // if (minEnd > minStart) {\n  //   ctx.arc(0, 0, minRadius, minEnd, minStart, true)\n  // } else {\n    ctx.lineTo(\n      ...getArcPointerByDeg(\n        (start + end) / 2,\n        gutter / 2 / Math.abs(Math.sin((start - end) / 2))\n      )\n    )\n  // }\n  ctx.closePath()\n}\n\n// 使用 arc 绘制圆角矩形\nexport const roundRectByArc = (\n  ctx: CanvasRenderingContext2D,\n  ...[x, y, w, h, r]: number[]\n) => {\n  const min = Math.min(w, h), PI = Math.PI\n  if (r > min / 2) r = min / 2\n  ctx.beginPath()\n  ctx.moveTo(x + r, y)\n  ctx.lineTo(x + r, y)\n  ctx.lineTo(x + w - r, y)\n  ctx.arc(x + w - r, y + r, r, -PI / 2, 0)\n  ctx.lineTo(x + w, y + h - r)\n  ctx.arc(x + w - r, y + h - r, r, 0, PI / 2)\n  ctx.lineTo(x + r, y + h)\n  ctx.arc(x + r, y + h - r, r, PI / 2, PI)\n  ctx.lineTo(x, y + r)\n  ctx.arc(x + r, y + r, r, PI, -PI / 2)\n  ctx.closePath()\n}\n\n/**\n * 创建线性渐变色\n */\nexport const getLinearGradient = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  background: string\n) => {\n  const context = (/linear-gradient\\((.+)\\)/.exec(background) as Array<any>)[1]\n    .split(',') // 根据逗号分割\n    .map((text: string) => text.trim()) // 去除两边空格\n  let deg = context.shift(), direction: [number, number, number, number] = [0, 0, 0, 0]\n  // 通过起始点和角度计算渐变终点的坐标点, 这里感谢泽宇大神提醒我使用勾股定理....\n  if (deg.includes('deg')) {\n    deg = deg.slice(0, -3) % 360\n    // 根据4个象限定义起点坐标, 根据45度划分8个区域计算终点坐标\n    const getLenOfTanDeg = (deg: number) => Math.tan(deg / 180 * Math.PI)\n    if (deg >= 0 && deg < 45) direction = [x, y + h, x + w, y + h - w * getLenOfTanDeg(deg - 0)]\n    else if (deg >= 45 && deg < 90) direction = [x, y + h, (x + w) - h * getLenOfTanDeg(deg - 45), y]\n    else if (deg >= 90 && deg < 135) direction = [x + w, y + h, (x + w) - h * getLenOfTanDeg(deg - 90), y]\n    else if (deg >= 135 && deg < 180) direction = [x + w, y + h, x, y + w * getLenOfTanDeg(deg - 135)]\n    else if (deg >= 180 && deg < 225) direction = [x + w, y, x, y + w * getLenOfTanDeg(deg - 180)]\n    else if (deg >= 225 && deg < 270) direction = [x + w, y, x + h * getLenOfTanDeg(deg - 225), y + h]\n    else if (deg >= 270 && deg < 315) direction = [x, y, x + h * getLenOfTanDeg(deg - 270), y + h]\n    else if (deg >= 315 && deg < 360) direction = [x, y, x + w, y + h - w * getLenOfTanDeg(deg - 315)]\n  }\n  // 创建四个简单的方向坐标\n  else if (deg.includes('top')) direction = [x, y + h, x, y]\n  else if (deg.includes('bottom')) direction = [x, y, x, y + h]\n  else if (deg.includes('left')) direction = [x + w, y, x, y]\n  else if (deg.includes('right')) direction = [x, y, x + w, y]\n  // 创建线性渐变必须使用整数坐标\n  const gradient = ctx.createLinearGradient(...(direction.map(n => n >> 0) as typeof direction))\n  // 这里后期重构, 先用any代替\n  return context.reduce((gradient: any, item: any, index: any) => {\n    const info = item.split(' ')\n    if (info.length === 1) gradient.addColorStop(index, info[0])\n    else if (info.length === 2) gradient.addColorStop(...info)\n    return gradient\n  }, gradient)\n}\n\n// // 根据三点画圆弧\n// export const drawRadian = (\n//   ctx: CanvasRenderingContext2D,\n//   r: number,\n//   start: number,\n//   end: number,\n//   direction: boolean = true\n// ) => {\n//   // 如果角度大于等于180度, 则分两次绘制, 因为 arcTo 无法绘制180度的圆弧\n//   if (Math.abs(end - start).toFixed(8) >= getAngle(180).toFixed(8)) {\n//     let middle = (end + start) / 2\n//     if (direction) {\n//       drawRadian(ctx, r, start, middle, direction)\n//       drawRadian(ctx, r, middle, end, direction)\n//     } else {\n//       drawRadian(ctx, r, middle, end, direction)\n//       drawRadian(ctx, r, start, middle, direction)\n//     }\n//     return false\n//   }\n//   // 如果方法相反, 则交换起点和终点\n//   if (!direction) [start, end] = [end, start]\n//   const [x1, y1] = getArcPointerByDeg(start, r)\n//   const [x2, y2] = getArcPointerByDeg(end, r)\n//   const [k1, b1] = getTangentByPointer(x1, y1)\n//   const [k2, b2] = getTangentByPointer(x2, y2)\n//   // 计算两条切线的交点\n//   let x0 = (b2 - b1) / (k1 - k2)\n//   let y0 = (k2 * b1 - k1 * b2) / (k2 - k1)\n//   // 如果有任何一条切线垂直于x轴, 则斜率不存在\n//   if (isNaN(x0)) {\n//     Math.abs(x1) === +r.toFixed(8) && (x0 = x1)\n//     Math.abs(x2) === +r.toFixed(8) && (x0 = x2)\n//   }\n//   if (k1 === Infinity || k1 === -Infinity) {\n//     y0 = k2 * x0 + b2\n//   }\n//   else if (k2 === Infinity || k2 === -Infinity) {\n//     y0 = k1 * x0 + b1\n//   }\n//   ctx.lineTo(x1, y1)\n//   // 微信小程序下 arcTo 在安卓真机下绘制有 bug\n//   ctx.arcTo(x0, y0, x2, y2, r)\n// }\n\n// // 使用 arcTo 绘制扇形 (弃用)\n// export const drawSectorByArcTo = (\n//   ctx: CanvasRenderingContext2D,\n//   minRadius: number,\n//   maxRadius: number,\n//   start: number,\n//   end: number,\n//   gutter: number,\n// ) => {\n//   if (!minRadius) minRadius = gutter\n//   // 内外圆弧分别进行等边缩放\n//   let maxGutter = getAngle(90 / Math.PI / maxRadius * gutter)\n//   let minGutter = getAngle(90 / Math.PI / minRadius * gutter)\n//   let maxStart = start + maxGutter\n//   let maxEnd = end - maxGutter\n//   let minStart = start + minGutter\n//   let minEnd = end - minGutter\n//   ctx.beginPath()\n//   ctx.moveTo(...getArcPointerByDeg(maxStart, maxRadius))\n//   drawRadian(ctx, maxRadius, maxStart, maxEnd, true)\n//   // 如果 getter 比按钮短就绘制圆弧, 反之计算新的坐标点\n//   if (minEnd > minStart) {\n//     drawRadian(ctx, minRadius, minStart, minEnd, false)\n//   } else {\n//     ctx.lineTo(\n//       ...getArcPointerByDeg(\n//         (start + end) / 2,\n//         gutter / 2 / Math.abs(Math.sin((start - end) / 2))\n//       )\n//     )\n//   }\n//   ctx.closePath()\n// }\n\n// // 使用 arcTo 绘制圆角矩形 (弃用)\n// export const roundRectByArcTo = (\n//   ctx: CanvasRenderingContext2D,\n//   ...[x, y, w, h, r]: number[]\n// ) => {\n//   let min = Math.min(w, h)\n//   if (r > min / 2) r = min / 2\n//   ctx.beginPath()\n//   ctx.moveTo(x + r, y)\n//   ctx.lineTo(x + r, y)\n//   ctx.lineTo(x + w - r, y)\n//   ctx.arcTo(x + w, y, x + w, y + r, r)\n//   ctx.lineTo(x + w, y + h - r)\n//   ctx.arcTo(x + w, y + h, x + w - r, y + h, r)\n//   ctx.lineTo(x + r, y + h)\n//   ctx.arcTo(x, y + h, x, y + h - r, r)\n//   ctx.lineTo(x, y + r)\n//   ctx.arcTo(x, y, x + r, y, r)\n// }\n","import { ImgType } from '../types/index'\nimport { roundRectByArc } from './math'\n\n/**\n * 根据路径获取图片对象\n * @param { string } src 图片路径\n * @returns { Promise<HTMLImageElement> } 图片标签\n */\nexport const getImage = (src: string): Promise<ImgType> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image()\n    img.onload = () => resolve(img)\n    img.onerror = err => reject(err)\n    img.src = src\n  })\n}\n\n/**\n * 图像裁剪\n * @param img 将要裁剪的图片对象\n * @param x 裁剪的 x 坐标\n * @param y 裁剪的 y 坐标\n * @param w 裁剪的宽度\n * @param h 裁剪的高度\n * @param r 裁剪的圆角半径\n * @returns 返回一个离屏 canvas 用于渲染\n */\nexport const clip = (\n  img: ImgType,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  r: number\n): ImgType => {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')!\n  const { width, height } = img\n  // 设置图片宽高\n  canvas.width = width\n  canvas.height = height\n  const scale = width / w\n  roundRectByArc(ctx, x * scale, y * scale, w * scale, h * scale, r * scale)\n  ctx.clip()\n  ctx.drawImage(img, 0, 0, width, height)\n  return canvas\n}\n\n/**\n * 透明度\n * @param img 将要处理的图片对象\n * @param opacity 透明度\n * @returns 返回一个离屏 canvas 用于渲染\n */\nexport const opacity = (\n  img: ImgType,\n  opacity: number\n): ImgType => {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')!\n  const { width, height } = img\n  // 设置图片宽高\n  canvas.width = width\n  canvas.height = height\n  // 绘制图片, 部分浏览器不支持 filter 属性, 需要处理兼容\n  if (typeof ctx.filter === 'string') {\n    ctx.filter = `opacity(${opacity}%)`\n    ctx.drawImage(img, 0, 0, width, height)\n  } else {\n    ctx.drawImage(img, 0, 0, width, height)\n    // 获取数据\n    const imageData = ctx.getImageData(0, 0, width, height)\n    const { data } = imageData\n    const len = data.length\n    for (let i = 0; i < len; i += 4) {\n      const alpha = data[i + 3]\n      if (alpha !== 0) data[i + 3] = alpha * opacity / 100\n    }\n    // 更新数据\n    ctx.putImageData(imageData, 0, 0)\n  }\n  return canvas\n}\n\n/**\n * 权重矩阵\n * @param radius 模糊半径\n * @param sigma \n * @returns 返回一个权重和为1的矩阵\n */\nconst getMatrix = (radius: number, sigma?: number): number[] => {\n  sigma = sigma || radius / 3\n  const r = Math.ceil(radius)\n  const sigma_2 = sigma * sigma\n  const sigma2_2 = 2 * sigma_2\n  const denominator = 1 / (2 * Math.PI * sigma_2)\n  const matrix = []\n  let total = 0\n  // 计算权重矩阵\n  for (let x = -r; x <= r; x++) {\n    for (let y = -r; y <= r; y++) {\n      // 套用二维高斯函数得到每个点的权重\n      const res = denominator * Math.exp(-(x * x + y * y) / sigma2_2)\n      matrix.push(res)\n      total += res\n    }\n  }\n  // 让矩阵中所有权重的和等于1\n  for (let i = 0; i < matrix.length; i++) {\n    matrix[i] /= total\n  }\n  return matrix\n}\n\n/**\n * 高斯模糊\n * @param img 将要处理的图片对象\n * @param radius 模糊半径\n * @returns 返回一个离屏 canvas 用于渲染\n */\nexport const blur = (\n  img: ImgType,\n  radius: number\n): ImgType => {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')!\n  const { width, height } = img\n  // 设置图片宽高\n  canvas.width = width\n  canvas.height = height\n  ctx.drawImage(img, 0, 0, width, height)\n  const ImageData = ctx.getImageData(0, 0, width, height)\n  const { data } = ImageData\n  const matrix = getMatrix(radius)\n  const r = Math.ceil(radius)\n  const w = width * 4\n  const cols = r * 2 + 1\n  const len = data.length, matrixLen = matrix.length\n  for (let i = 0; i < len; i += 4) {\n    // 处理\n  }\n  console.log(ImageData)\n  ctx.putImageData(ImageData, 0, 0)\n  return canvas\n}\n\nexport const getBase64Image = () => {\n\n}\n","import Watcher from './watcher'\n\nexport default class Dep {\n  static target: Watcher | null\n  private subs: Array<Watcher>\n\n  /**\n   * 订阅中心构造器\n   */\n  constructor () {\n    this.subs = []\n  }\n\n  /**\n   * 收集依赖\n   * @param {*} sub \n   */\n  public addSub (sub: Watcher) {\n    // 此处临时使用includes防重复添加\n    if (!this.subs.includes(sub)) {\n      this.subs.push(sub)\n    }\n  }\n\n  /**\n   * 派发更新\n   */\n  public notify () {\n    this.subs.forEach(sub => {\n      sub.update()\n    })\n  }\n}\n","\nimport { isExpectType } from '../utils'\n\nexport const hasProto = '__proto__' in {}\n\nexport function def (obj: object, key: string | number, val: any, enumerable?: boolean) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  })\n}\n\nexport function parsePath (path: string) {\n  path += '.'\n  let segments: string[] = [], segment = ''\n  for (let i = 0; i < path.length; i++) {\n    let curr = path[i]\n    if (/\\[|\\./.test(curr)) {\n      segments.push(segment)\n      segment = ''\n    } else if (/\\W/.test(curr)) {\n      continue\n    } else {\n      segment += curr\n    }\n  }\n  return function (data: object | any[]) {\n    return segments.reduce((data, key) => {\n      return data[key]\n    }, data)\n  }\n}\n\nexport function traverse (value: any) {\n  // const seenObjects = new Set()\n  const dfs = (data: any) => {\n    if (!isExpectType(data, 'array', 'object')) return\n    Object.keys(data).forEach(key => {\n      const value = data[key]\n      dfs(value)\n    })\n  }\n  dfs(value)\n  // seenObjects.clear()\n}","/**\n * 重写数组的原型方法\n */\nconst oldArrayProto = Array.prototype\nconst newArrayProto = Object.create(oldArrayProto)\nconst methods = ['push', 'pop', 'shift', 'unshift', 'sort', 'splice', 'reverse']\nmethods.forEach(method => {\n  newArrayProto[method] = function (...args: any[]) {\n    const res = oldArrayProto[method].apply(this, args)\n    const luckyOb = this['__luckyOb__']\n    if (['push', 'unshift', 'splice'].includes(method)) luckyOb.walk(this)\n    luckyOb.dep.notify()\n    return res\n  }\n})\n\nexport { newArrayProto }\n","import Dep from './dep'\nimport { hasProto, def } from './utils'\nimport { newArrayProto } from './array'\n\nexport default class Observer {\n  value: any\n  dep: Dep\n\n  /**\n   * 观察者构造器\n   * @param value \n   */\n  constructor (value: any) {\n    // this.value = value\n    this.dep = new Dep()\n    // 将响应式对象代理到当前value上面, 并且将当前的enumerable设置为false\n    def(value, '__luckyOb__', this)\n    if (Array.isArray(value)) { // 如果是数组, 则重写原型方法\n      if (hasProto) {\n        value['__proto__'] = newArrayProto\n      } else {\n        Object.getOwnPropertyNames(newArrayProto).forEach(key => {\n          def(value, key, newArrayProto[key])\n        })\n      }\n    }\n    this.walk(value)\n  }\n\n  walk (data: object | any[]) {\n    Object.keys(data).forEach(key => {\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n\n/**\n * 处理响应式\n * @param { Object | Array } data\n */\nexport function observe (data: any): Observer | void {\n  if (!data || typeof data !== 'object') return\n  let luckyOb: Observer | void\n  if ('__luckyOb__' in data) {\n    luckyOb = data['__luckyOb__']\n  } else {\n    luckyOb = new Observer(data)\n  }\n  return luckyOb\n}\n\n/**\n * 重写 setter / getter\n * @param {*} data \n * @param {*} key \n * @param {*} val \n */\nexport function defineReactive (data: any, key: string | number, val: any) {\n  const dep = new Dep()\n  const property = Object.getOwnPropertyDescriptor(data, key)\n  if (property && property.configurable === false) {\n    return\n  }\n  const getter = property && property.get\n  const setter = property && property.set\n  if ((!getter || setter) && arguments.length === 2) {\n    val = data[key]\n  }\n  let childOb = observe(val)\n  Object.defineProperty(data, key, {\n    get: () => {\n      const value = getter ? getter.call(data) : val\n      if (Dep.target) {\n        dep.addSub(Dep.target)\n        if (childOb) {\n          childOb.dep.addSub(Dep.target)\n        }\n      }\n      return value\n    },\n    set: (newVal) => {\n      if (newVal === val) return\n      val = newVal\n      if (getter && !setter) return\n      if (setter) {\n        setter.call(data, newVal)\n      } else {\n        val = newVal\n      }\n      childOb = observe(newVal)\n      dep.notify()\n    }\n  })\n}\n","import Lucky from '../lib/lucky'\nimport Dep from './dep'\nimport { parsePath, traverse } from './utils'\n\nexport interface WatchOptType {\n  handler?: () => Function\n  immediate?: boolean\n  deep?: boolean\n}\n\nlet uid = 0\nexport default class Watcher {\n  id: number\n  $lucky: Lucky\n  expr: string | Function\n  cb: Function\n  deep: boolean\n  getter: Function\n  value: any\n\n  /**\n   * 观察者构造器\n   * @param {*} $lucky \n   * @param {*} expr \n   * @param {*} cb \n   */\n  constructor ($lucky: Lucky, expr: string | Function, cb: Function, options: WatchOptType = {}) {\n    this.id = uid++\n    this.$lucky = $lucky\n    this.expr = expr\n    this.deep = !!options.deep\n    if (typeof expr === 'function') {\n      this.getter = expr\n    } else {\n      this.getter = parsePath(expr)\n    }\n    this.cb = cb\n    this.value = this.get()\n  }\n\n  /**\n   * 根据表达式获取新值\n   */\n  get () {\n    Dep.target = this\n    const value = this.getter.call(this.$lucky, this.$lucky)\n    // 处理深度监听\n    if (this.deep) {\n      traverse(value)\n    }\n    Dep.target = null\n    return value\n  }\n\n  /**\n   * 触发 watcher 更新\n   */\n  update () {\n    // get获取新值\n    const newVal = this.get()\n    // 读取之前存储的旧值\n    const oldVal = this.value\n    this.value = newVal\n    // 触发 watch 回调\n    this.cb.call(this.$lucky, newVal, oldVal)\n  }\n}\n","import '../utils/polyfill'\nimport { has, isExpectType, throttle } from '../utils/index'\nimport { clip, opacity, blur } from '../utils/image'\nimport { name, version } from '../../package.json'\nimport { ConfigType, UserConfigType, ImgItemType, ImgType, Tuple } from '../types/index'\nimport { defineReactive } from '../observer'\nimport Watcher, { WatchOptType } from '../observer/watcher'\n\nexport default class Lucky {\n  protected readonly version: string = version\n  protected readonly config: ConfigType\n  protected readonly ctx: CanvasRenderingContext2D\n  protected htmlFontSize: number = 16\n  protected rAF: Function = function () {}\n  protected boxWidth: number = 0\n  protected boxHeight: number = 0\n  protected data: {\n    width: string | number,\n    height: string | number\n  }\n  /**\n   * 公共构造器\n   * @param config\n   */\n  constructor (\n    config: string | HTMLDivElement | UserConfigType,\n    data: {\n      width: string | number,\n      height: string | number\n    }\n  ) {\n    // 兼容代码开始: 为了处理 v1.0.6 版本在这里传入了一个 dom\n    if (typeof config === 'string') config = { el: config } as UserConfigType\n    else if (config.nodeType === 1) config = { el: '', divElement: config } as UserConfigType\n    // 这里先野蛮的处理, 等待后续优化, 对外暴露的类型是UserConfigType, 但内部期望是ConfigType\n    config = config as UserConfigType\n    this.config = config as ConfigType\n    this.data = data\n    // 开始初始化\n    if (!config.flag) config.flag = 'WEB'\n    if (config.el) config.divElement = document.querySelector(config.el) as HTMLDivElement\n    // 如果存在父盒子, 就创建canvas标签\n    if (config.divElement) {\n      // 无论盒子内有没有canvas都执行覆盖逻辑\n      config.canvasElement = document.createElement('canvas')\n      config.divElement.appendChild(config.canvasElement)\n    }\n    // 获取 canvas 上下文\n    if (config.canvasElement) {\n      config.ctx = config.canvasElement.getContext('2d')!\n      // 添加版本信息到标签上, 方便定位版本问题\n      config.canvasElement.setAttribute('package', `${name}@${version}`)\n      config.canvasElement.addEventListener('click', e => this.handleClick(e))\n    }\n    this.ctx = config.ctx as CanvasRenderingContext2D\n    // 初始化 window 方法\n    this.initWindowFunction()\n    // 如果最后得不到 canvas 上下文那就无法进行绘制\n    if (!this.config.ctx) {\n      console.error('无法获取到 CanvasContext2D')\n    }\n    // 监听 window 触发 resize 时重置\n    window && window.addEventListener('resize', throttle(() => this.resize(), 300))\n    // 监听异步设置 html 的 fontSize 并重新绘制\n    window && window.MutationObserver && new window.MutationObserver(() => {\n      this.resize()\n    }).observe(document.documentElement, { attributes: true })\n  }\n\n  /**\n   * 初始化组件大小/单位\n   */\n  protected resize(): void {\n    this.config.beforeResize?.()\n    // 先初始化 fontSize 以防后面有 rem 单位\n    this.setHTMLFontSize()\n    // 拿到 config 即可设置 dpr\n    this.setDpr()\n    // 初始化宽高\n    this.resetWidthAndHeight()\n    // 根据 dpr 来缩放 canvas\n    this.zoomCanvas()\n  }\n\n  /**\n   * 初始化方法\n   */\n   protected initLucky () {\n    this.resize()\n    if (!this.boxWidth || !this.boxHeight) {\n      return console.error('无法获取到宽度或高度')\n    }\n  }\n\n  /**\n   * 鼠标点击事件\n   * @param e 事件参数\n   */\n  protected handleClick (e: MouseEvent): void {}\n\n  /**\n   * 根标签的字体大小\n   */\n  protected setHTMLFontSize (): void {\n    if (!window) return\n    this.htmlFontSize = +window.getComputedStyle(document.documentElement).fontSize.slice(0, -2)\n  }\n\n  /**\n   * 设备像素比\n   * window 环境下自动获取, 其余环境手动传入\n   */\n  protected setDpr (): void {\n    const { config } = this\n    if (config.dpr) {\n      // 优先使用 config 传入的 dpr\n    } else if (window) {\n      window['dpr'] = config.dpr = window.devicePixelRatio || 1\n    } else if (!config.dpr) {\n      console.error(config, '未传入 dpr 可能会导致绘制异常')\n    }\n  }\n\n  /**\n   * 重置盒子和canvas的宽高\n   */\n  private resetWidthAndHeight (): void {\n    const { config, data } = this\n    // 如果是浏览器环境并且存在盒子\n    let boxWidth = 0, boxHeight = 0\n    if (config.divElement) {\n      boxWidth = config.divElement.offsetWidth\n      boxHeight = config.divElement.offsetHeight\n    }\n    // 先从 data 里取宽高, 如果 config 上面没有, 就从 style 上面取\n    this.boxWidth = this.getLength(data.width || config['width']) || boxWidth\n    this.boxHeight = this.getLength(data.height || config['height']) || boxHeight\n    // 重新把宽高赋给盒子\n    if (config.divElement) {\n      config.divElement.style.overflow = 'hidden'\n      config.divElement.style.width = this.boxWidth + 'px'\n      config.divElement.style.height = this.boxHeight + 'px'\n    }\n  }\n\n  /**\n   * 根据 dpr 缩放 canvas 并处理位移\n   */\n  protected zoomCanvas (): void {\n    const { config, ctx } = this\n    const { canvasElement, dpr } = config\n    const [width, height] = [this.boxWidth * dpr, this.boxHeight * dpr]\n    if (!canvasElement) return\n    canvasElement.width = width\n    canvasElement.height = height\n    canvasElement.style.width = `${width}px`\n    canvasElement.style.height = `${height}px`\n    canvasElement.style['transform-origin'] = 'left top'\n    canvasElement.style.transform = `scale(${1 / dpr})`\n    ctx.scale(dpr, dpr)\n  }\n\n  /**\n   * 从 window 对象上获取一些方法\n   */\n  private initWindowFunction (): void {\n    const { config } = this\n    if (window) {\n      this.rAF = window.requestAnimationFrame ||\n        window['webkitRequestAnimationFrame'] ||\n        window['mozRequestAnimationFrame'] ||\n        function (callback: Function) {\n          window.setTimeout(callback, 1000 / 60)\n        }\n      config.setTimeout = window.setTimeout\n      config.setInterval = window.setInterval\n      config.clearTimeout = window.clearTimeout\n      config.clearInterval = window.clearInterval\n      return\n    }\n    if (config.rAF) {\n      // 优先使用帧动画\n      this.rAF = config.rAF\n    } else if (config.setTimeout) {\n      // 其次使用定时器\n      const timeout = config.setTimeout\n      this.rAF = (callback: Function): number => timeout(callback, 16.7)\n    } else {\n      // 如果config里面没有提供, 那就假设全局方法存在setTimeout\n      this.rAF = (callback: Function): number => setTimeout(callback, 16.7)\n    }\n  }\n\n  /**\n   * 异步加载图片并返回图片的几何信息\n   * @param src 图片路径\n   * @param info 图片信息\n   */\n  protected loadImg (\n    src: string,\n    info: ImgItemType,\n    resolveName = '$resolve'\n  ): Promise<ImgType> {\n    return new Promise((resolve, reject) => {\n      if (!src) reject(`=> '${info.src}' 不能为空或不合法`)\n      if (this.config.flag === 'WEB') {\n        let imgObj = new Image()\n        imgObj.onload = () => resolve(imgObj)\n        imgObj.onerror = () => reject(`=> '${info.src}' 图片加载失败`)\n        imgObj.src = src\n      } else {\n        // 其余平台向外暴露, 交给外部自行处理\n        info[resolveName] = resolve\n        info['$reject'] = reject\n        return\n      }\n    })\n  }\n\n  /**\n   * 公共绘制图片的方法\n   * @param imgObj 图片对象\n   * @param rectInfo: [x轴位置, y轴位置, 渲染宽度, 渲染高度] \n   */\n  protected drawImage(\n    ctx: CanvasRenderingContext2D,\n    imgObj: ImgType,\n    ...rectInfo: [...Tuple<number, 4>, ...Partial<Tuple<number, 4>>]\n  ): void {\n    let drawImg\n    const { flag, dpr } = this.config\n    if (['WEB', 'MP-WX'].includes(flag)) {\n      // 浏览器和新版小程序中直接绘制即可\n      drawImg = imgObj\n    } else if (['UNI-H5', 'UNI-MP', 'TARO-H5', 'TARO-MP'].includes(flag)) {\n      // 旧版本的小程序需要绘制 path, 这里特殊处理一下\n      type OldImageType = ImgType & { path: CanvasImageSource }\n      drawImg = (imgObj as OldImageType).path\n    } else {\n      // 如果传入了未知的标识\n      return console.error('意料之外的 flag, 该平台尚未兼容!')\n    }\n    if (rectInfo.length === 8) {\n      rectInfo = rectInfo.map((val, index) => index < 4 ? val! * dpr : val) as Tuple<number, 8>\n    }\n    return ctx.drawImage(drawImg, ...rectInfo as Tuple<number, 8>)\n  }\n\n  /**\n   * 获取长度\n   * @param length 将要转换的长度\n   * @return 返回长度\n   */\n  protected getLength (length: string | number | undefined): number {\n    if (isExpectType(length, 'number')) return length as number\n    if (isExpectType(length, 'string')) return this.changeUnits(length as string)\n    return 0\n  }\n\n  /**\n   * 转换单位\n   * @param { string } value 将要转换的值\n   * @param { number } denominator 分子\n   * @return { number } 返回新的字符串\n   */\n  protected changeUnits (value: string, denominator = 1): number {\n    return Number(value.replace(/^([-]*[0-9.]*)([a-z%]*)$/, (value, num, unit) => {\n      const unitFunc = {\n        '%': (n: number) => n * (denominator / 100),\n        'px': (n: number) => n * 1,\n        'rem': (n: number) => n * this.htmlFontSize,\n        'vw': (n: number) => n / 100 * window.innerWidth,\n      }[unit]\n      if (unitFunc) return unitFunc(num)\n      // 如果找不到默认单位, 就交给外面处理\n      const otherUnitFunc = this.config.unitFunc\n      return otherUnitFunc ? otherUnitFunc(num, unit) : num\n    }))\n  }\n\n  protected getOffscreenCanvas (width: number, height: number): {\n    _offscreenCanvas: HTMLCanvasElement,\n    _ctx: CanvasRenderingContext2D\n  } | void {\n    if (!has(this, '_offscreenCanvas')) {\n      if (!window || !window.document) return console.error('无法创建离屏Canvas!')\n      this['_offscreenCanvas'] = document.createElement('canvas')\n    }\n    const dpr = this.config.dpr\n    const _offscreenCanvas = this['_offscreenCanvas'] as HTMLCanvasElement\n    _offscreenCanvas.width = (width || 300) * dpr\n    _offscreenCanvas.height = (height || 150) * dpr\n    const _ctx = _offscreenCanvas.getContext('2d')!\n    _ctx.clearRect(0, 0, width, height)\n    _ctx.scale(dpr, dpr)\n    _ctx['dpr'] = dpr\n    return { _offscreenCanvas, _ctx }\n  }\n\n  protected multiplyByDpr <T extends number[]>(...nums: number[]): number[] {\n    return nums.map(num => num * this.config.dpr)\n  }\n\n  /**\n   * 图片裁剪\n   */\n  public $clip (img: ImgType, ...params: (string | number)[]): ImgType {\n    const args: number[] = params.map(val => {\n      return this.getLength(val)\n    })\n    return clip(img, ...(args as [number, number, number, number, number]))\n  }\n\n  /**\n   * 透明度\n   */\n  public $opacity (img: ImgType, value: string | number) {\n    return opacity(img, this.getLength(value))\n  }\n\n  /**\n   * 高斯模糊\n   */\n  public $blur (img: ImgType, radius: string | number) {\n    return blur(img, this.getLength(radius))\n  }\n\n  /**\n   * 添加一个新的响应式数据 (临时)\n   * @param data 数据\n   * @param key 属性\n   * @param value 新值\n   */\n  public $set (data: object, key: string | number, value: any) {\n    if (!data || typeof data !== 'object') return\n    defineReactive(data, key, value)\n  }\n\n  /**\n   * 添加一个属性计算 (临时)\n   * @param data 源数据\n   * @param key 属性名\n   * @param callback 回调函数\n   */\n  protected $computed (data: object, key: string, callback: Function) {\n    Object.defineProperty(data, key, {\n      get: () => {\n        return callback.call(this)\n      }\n    })\n  }\n\n  /**\n   * 添加一个观察者 create user watcher\n   * @param expr 表达式\n   * @param handler 回调函数\n   * @param watchOpt 配置参数\n   * @return 卸载当前观察者的函数 (暂未返回)\n   */\n  protected $watch (\n    expr: string | Function,\n    handler: Function | WatchOptType,\n    watchOpt: WatchOptType = {}\n  ): Function {\n    if (typeof handler === 'object') {\n      watchOpt = handler\n      handler = watchOpt.handler!\n    }\n    // 创建 user watcher\n    const watcher = new Watcher(this, expr, handler, watchOpt)\n    // 判断是否需要初始化时触发回调\n    if (watchOpt.immediate) {\n      handler.call(this, watcher.value)\n    }\n    // 返回一个卸载当前观察者的函数\n    return function unWatchFn () {}\n  }\n}\n","/**\n * 缓动函数\n * t: current time（当前时间）\n * b: beginning value（初始值）\n * c: change in value（变化量）\n * d: duration（持续时间）\n * \n * 感谢张鑫旭大佬 https://github.com/zhangxinxu/Tween\n */\n\ninterface SpeedType {\n  easeIn: (...arr: number[]) => number\n  easeOut: (...arr: number[]) => number\n}\n\n// 二次方的缓动\nexport const quad: SpeedType = {\n  easeIn: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * (t /= d) * t + b\n  },\n  easeOut: function (t, b, c, d) {\n    if (t >= d) t = d\n    return -c * (t /= d) * (t - 2) + b\n  }\n}\n\n// 三次方的缓动\nexport const cubic: SpeedType = {\n  easeIn: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * (t /= d) * t * t + b\n  },\n  easeOut: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * ((t = t / d - 1) * t * t + 1) + b\n  }\n}\n\n// 四次方的缓动\nexport const quart: SpeedType = {\n  easeIn: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * (t /= d) * t * t * t + b\n  },\n  easeOut: function (t, b, c, d) {\n    if (t >= d) t = d\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b\n  }\n}\n\n// 五次方的缓动\nexport const quint: SpeedType = {\n  easeIn: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * (t /= d) * t * t * t * t + b\n  },\n  easeOut: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b\n  }\n}\n\n// 正弦曲线的缓动\nexport const sine: SpeedType = {\n  easeIn: function (t, b, c, d) {\n    if (t >= d) t = d\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b\n  },\n  easeOut: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * Math.sin(t / d * (Math.PI / 2)) + b\n  }\n}\n\n// 指数曲线的缓动\nexport const expo: SpeedType = {\n  easeIn: function (t, b, c, d) {\n    if (t >= d) t = d\n    return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b\n  },\n  easeOut: function (t, b, c, d) {\n    if (t >= d) t = d\n    return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b\n  }\n}\n\n// 圆形曲线的缓动\nexport const circ: SpeedType = {\n  easeIn: function (t, b, c, d) {\n    if (t >= d) t = d\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b\n  },\n  easeOut: function (t, b, c, d) {\n    if (t >= d) t = d\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b\n  }\n}\n","import Lucky from './lucky'\nimport { UserConfigType, FontItemType, ImgItemType, ImgType } from '../types/index'\nimport LuckyWheelConfig, {\n  BlockType,\n  PrizeType,\n  ButtonType,\n  DefaultConfigType,\n  DefaultStyleType,\n  StartCallbackType,\n  EndCallbackType\n} from '../types/wheel'\nimport {\n  isExpectType,\n  removeEnter,\n  hasBackground,\n  computeRange,\n  splitText\n} from '../utils/index'\nimport { getAngle, fanShapedByArc } from '../utils/math'\nimport { quad } from '../utils/tween'\n\nexport default class LuckyWheel extends Lucky {\n  private blocks: Array<BlockType> = []\n  private prizes: Array<PrizeType> = []\n  private buttons: Array<ButtonType> = []\n  private defaultConfig: DefaultConfigType = {}\n  private defaultStyle: DefaultStyleType = {}\n  private _defaultConfig: Required<DefaultConfigType> = {} as Required<DefaultConfigType>\n  private _defaultStyle: Required<DefaultStyleType> = {} as Required<DefaultStyleType>\n  private startCallback?: StartCallbackType\n  private endCallback?: EndCallbackType\n  private Radius = 0                    // 大转盘半径\n  private prizeRadius = 0               // 奖品区域半径\n  private prizeDeg = 0                  // 奖品数学角度\n  private prizeRadian = 0               // 奖品运算角度\n  private rotateDeg = 0                 // 转盘旋转角度\n  private maxBtnRadius = 0              // 最大按钮半径\n  private startTime = 0                 // 开始时间戳\n  private endTime = 0                   // 停止时间戳\n  private stopDeg = 0                   // 刻舟求剑\n  private endDeg = 0                    // 停止角度\n  private FPS = 16.6                    // 屏幕刷新率\n  /**\n   * 游戏当前的阶段\n   * step = 0 时, 游戏尚未开始\n   * step = 1 时, 此时处于加速阶段\n   * step = 2 时, 此时处于匀速阶段\n   * step = 3 时, 此时处于减速阶段\n   */\n  private step: 0 | 1 | 2 | 3 = 0\n  /**\n   * 中奖索引\n   * prizeFlag = undefined 时, 处于开始抽奖阶段, 正常旋转\n   * prizeFlag >= 0 时, 说明stop方法被调用, 并且传入了中奖索引\n   * prizeFlag === -1 时, 说明stop方法被调用, 并且传入了负值, 本次抽奖无效\n   */\n  private prizeFlag: number | undefined\n  private ImageCache = {\n    blocks: [] as Array<ImgType[]>,\n    prizes: [] as Array<ImgType[]>,\n    buttons: [] as Array<ImgType[]>,\n  }\n\n  /**\n   * 大转盘构造器\n   * @param config 配置项\n   * @param data 抽奖数据\n   */\n  constructor (config: UserConfigType, data: LuckyWheelConfig) {\n    super(config, {\n      width: data.width,\n      height: data.height\n    })\n    this.initData(data)\n    this.initWatch()\n    this.initComputed()\n    // 创建前回调函数\n    config.beforeCreate?.call(this)\n    // 首次初始化\n    this.init()\n  }\n\n  protected resize(): void {\n    super.resize()\n    this.Radius = Math.min(this.boxWidth, this.boxHeight) / 2\n    this.ctx.translate(this.Radius, this.Radius)\n    this.draw()\n    this.config.afterResize?.()\n  }\n\n  protected initLucky (): void {\n    this.Radius = 0\n    this.prizeRadius = 0\n    this.prizeDeg = 0\n    this.prizeRadian = 0\n    this.rotateDeg = 0\n    this.maxBtnRadius = 0\n    this.startTime = 0\n    this.endTime = 0\n    this.stopDeg = 0\n    this.endDeg = 0\n    this.FPS = 16.6\n    this.prizeFlag = -1\n    this.step = 0\n    super.initLucky()\n  }\n\n  /**\n   * 初始化数据\n   * @param data\n   */\n  private initData (data: LuckyWheelConfig): void {\n    this.$set(this, 'width', data.width || '300px')\n    this.$set(this, 'height', data.height || '300px')\n    this.$set(this, 'blocks', data.blocks || [])\n    this.$set(this, 'prizes', data.prizes || [])\n    this.$set(this, 'buttons', data.buttons || [])\n    this.$set(this, 'defaultConfig', data.defaultConfig || {})\n    this.$set(this, 'defaultStyle', data.defaultStyle || {})\n    this.$set(this, 'startCallback', data.start)\n    this.$set(this, 'endCallback', data.end)\n  }\n\n  /**\n   * 初始化属性计算\n   */\n  private initComputed () {\n    // 默认配置\n    this.$computed(this, '_defaultConfig', () => {\n      const config = {\n        gutter: '0px',\n        offsetDegree: 0,\n        speed: 20,\n        speedFunction: 'quad',\n        accelerationTime: 2500,\n        decelerationTime: 2500,\n        stopRange: 0,\n        ...this.defaultConfig\n      }\n      return config\n    })\n    // 默认样式\n    this.$computed(this, '_defaultStyle', () => {\n      const style = {\n        fontSize: '18px',\n        fontColor: '#000',\n        fontStyle: 'sans-serif',\n        fontWeight: '400',\n        background: 'rgba(0,0,0,0)',\n        wordWrap: true,\n        lengthLimit: '90%',\n        ...this.defaultStyle\n      }\n      return style\n    })\n  }\n\n  /**\n   * 初始化观察者\n   */\n  private initWatch () {\n    // 重置宽度\n    this.$watch('width', (newVal: string | number) => {\n      this.data.width = newVal\n      this.resize()\n    })\n    // 重置高度\n    this.$watch('height', (newVal: string | number) => {\n      this.data.height = newVal\n      this.resize()\n    })\n    // 观察 blocks 变化收集图片\n    this.$watch('blocks', (newData: Array<BlockType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    // 观察 prizes 变化收集图片\n    this.$watch('prizes', (newData: Array<PrizeType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    // 观察 buttons 变化收集图片\n    this.$watch('buttons', (newData: Array<ButtonType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    this.$watch('defaultConfig', () => this.draw(), { deep: true })\n    this.$watch('defaultStyle', () => this.draw(), { deep: true })\n    this.$watch('startCallback', () => this.init())\n    this.$watch('endCallback', () => this.init())\n  }\n\n  /**\n   * 初始化 canvas 抽奖\n   */\n  public async init (): Promise<void> {\n    this.initLucky()\n    const { config } = this\n    // 初始化前回调函数\n    config.beforeInit?.call(this)\n    this.draw() // 先画一次, 防止闪烁\n    this.draw() // 再画一次, 拿到正确的按钮轮廓\n    // 异步加载图片\n    await this.initImageCache()\n    // 初始化后回调函数\n    config.afterInit?.call(this)\n  }\n\n  private initImageCache (): Promise<void> {\n    return new Promise((resolve) => {\n      const willUpdateImgs = {\n        blocks: this.blocks.map(block => block.imgs),\n        prizes: this.prizes.map(prize => prize.imgs),\n        buttons: this.buttons.map(btn => btn.imgs),\n      }\n      ;(<(keyof typeof willUpdateImgs)[]>Object.keys(willUpdateImgs)).forEach(imgName => {\n        const willUpdate = willUpdateImgs[imgName]\n        // 循环遍历所有图片\n        const allPromise: Promise<void>[] = []\n        willUpdate && willUpdate.forEach((imgs, cellIndex) => {\n          imgs && imgs.forEach((imgInfo, imgIndex) => {\n            allPromise.push(this.loadAndCacheImg(imgName, cellIndex, imgName, imgIndex))\n          })\n        })\n        Promise.all(allPromise).then(() => {\n          this.draw()\n          resolve()\n        })\n      })\n    })\n  }\n\n  /**\n   * canvas点击事件\n   * @param e 事件参数\n   */\n  protected handleClick (e: MouseEvent): void {\n    const { ctx } = this\n    ctx.beginPath()\n    ctx.arc(0, 0, this.maxBtnRadius, 0, Math.PI * 2, false)\n    if (!ctx.isPointInPath(e.offsetX, e.offsetY)) return\n    if (this.startTime) return\n    this.startCallback?.(e)\n  }\n\n  /**\n   * 根据索引单独加载指定图片并缓存\n   * @param cellName 模块名称\n   * @param cellIndex 模块索引\n   * @param imgName 模块对应的图片缓存\n   * @param imgIndex 图片索引\n   */\n  private async loadAndCacheImg (\n    cellName: keyof typeof this.ImageCache,\n    cellIndex: number,\n    imgName: keyof typeof this.ImageCache,\n    imgIndex: number,\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      // 获取图片信息\n      const cell: BlockType | PrizeType | ButtonType = this[cellName][cellIndex]\n      if (!cell || !cell.imgs) return\n      const imgInfo = cell.imgs[imgIndex]\n      if (!imgInfo) return\n      const ImageCache = this.ImageCache\n      if (!ImageCache[imgName][cellIndex]) ImageCache[imgName][cellIndex] = []\n      // 异步加载图片\n      this.loadImg(imgInfo.src, imgInfo).then(currImg => {\n        if (typeof imgInfo.formatter === 'function') {\n          currImg = imgInfo.formatter.call(this, currImg)\n        }\n        ImageCache[imgName][cellIndex][imgIndex] = currImg\n        resolve()\n      }).catch(err => {\n        console.error(`${cellName}[${cellIndex}].imgs[${imgIndex}] ${err}`)\n        reject()\n      })\n    })\n  }\n\n  /**\n   * 计算图片的渲染宽高\n   * @param imgObj 图片标签元素\n   * @param imgInfo 图片信息\n   * @param maxWidth 最大宽度\n   * @param maxHeight 最大高度\n   * @return [渲染宽度, 渲染高度]\n   */\n  private computedWidthAndHeight (\n    imgObj: ImgType,\n    imgInfo: ImgItemType,\n    maxWidth: number,\n    maxHeight: number\n  ): [number, number] {\n    // 根据配置的样式计算图片的真实宽高\n    if (!imgInfo.width && !imgInfo.height) {\n      // 如果没有配置宽高, 则使用图片本身的宽高\n      return [imgObj.width, imgObj.height]\n    } else if (imgInfo.width && !imgInfo.height) {\n      // 如果只填写了宽度, 没填写高度\n      let trueWidth = this.getWidth(imgInfo.width, maxWidth)\n      // 那高度就随着宽度进行等比缩放\n      return [trueWidth, imgObj.height * (trueWidth / imgObj.width)]\n    } else if (!imgInfo.width && imgInfo.height) {\n      // 如果只填写了宽度, 没填写高度\n      let trueHeight = this.getHeight(imgInfo.height, maxHeight)\n      // 那宽度就随着高度进行等比缩放\n      return [imgObj.width * (trueHeight / imgObj.height), trueHeight]\n    }\n    // 如果宽度和高度都填写了, 就如实计算\n    return [\n      this.getWidth(imgInfo.width, maxWidth),\n      this.getHeight(imgInfo.height, maxHeight)\n    ]\n  }\n\n  /**\n   * 开始绘制\n   */\n  protected draw (): void {\n    const { config, ctx, _defaultConfig, _defaultStyle } = this\n    // 触发绘制前回调\n    config.beforeDraw?.call(this, ctx)\n    // 清空画布\n    ctx.clearRect(-this.Radius, -this.Radius, this.Radius * 2, this.Radius * 2)\n    // 绘制blocks边框\n    this.prizeRadius = this.blocks.reduce((radius, block, blockIndex) => {\n      if (hasBackground(block.background)) {\n        ctx.beginPath()\n        ctx.fillStyle = block.background!\n        ctx.arc(0, 0, radius, 0, Math.PI * 2, false)\n        ctx.fill()\n      }\n      block.imgs && block.imgs.forEach((imgInfo, imgIndex) => {\n        const blockImgs = this.ImageCache['blocks']\n        if (!blockImgs || !blockImgs[blockIndex]) return\n        const blockImg = blockImgs[blockIndex][imgIndex]\n        if (!blockImg) return\n        // 绘制图片\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(blockImg, imgInfo, radius * 2, radius * 2)\n        const [xAxis, yAxis] = [this.getOffsetX(trueWidth), this.getHeight(imgInfo.top, radius * 2) - radius]\n        ctx.save()\n        imgInfo.rotate && ctx.rotate(getAngle(this.rotateDeg))\n        this.drawImage(ctx, blockImg, xAxis, yAxis, trueWidth, trueHeight)\n        ctx.restore()\n      })\n      return radius - this.getLength(block.padding && block.padding.split(' ')[0])\n    }, this.Radius)\n    // 计算起始弧度\n    this.prizeDeg = 360 / this.prizes.length\n    this.prizeRadian = getAngle(this.prizeDeg)\n    // 起始角度调整到正上方, 并且减去半个扇形角度\n    let start = getAngle(this.rotateDeg - 90 + this.prizeDeg / 2 + _defaultConfig.offsetDegree)\n    // 计算文字横坐标\n    const getFontX = (line: string) => {\n      return this.getOffsetX(ctx.measureText(line).width)\n    }\n    // 计算文字纵坐标\n    const getFontY = (font: FontItemType, height: number, lineIndex: number) => {\n      // 优先使用字体行高, 要么使用默认行高, 其次使用字体大小, 否则使用默认字体大小\n      const lineHeight = font.lineHeight || _defaultStyle.lineHeight || font.fontSize || _defaultStyle.fontSize\n      return this.getHeight(font.top, height) + (lineIndex + 1) * this.getLength(lineHeight)\n    }\n    ctx.save()\n    // 绘制prizes奖品区域\n    this.prizes.forEach((prize, prizeIndex) => {\n      // 计算当前奖品区域中间坐标点\n      let currMiddleDeg = start + prizeIndex * this.prizeRadian\n      // 奖品区域可见高度\n      let prizeHeight = this.prizeRadius - this.maxBtnRadius\n      // 绘制背景\n      const background = prize.background || _defaultStyle.background\n      if (hasBackground(background)) {\n        ctx.fillStyle = background\n        fanShapedByArc(\n          ctx, this.maxBtnRadius, this.prizeRadius,\n          currMiddleDeg - this.prizeRadian / 2,\n          currMiddleDeg + this.prizeRadian / 2,\n          this.getLength(_defaultConfig.gutter),\n        )\n        ctx.fill()\n      }\n      // 计算临时坐标并旋转文字\n      let x = Math.cos(currMiddleDeg) * this.prizeRadius\n      let y = Math.sin(currMiddleDeg) * this.prizeRadius\n      ctx.translate(x, y)\n      ctx.rotate(currMiddleDeg + getAngle(90))\n      // 绘制图片\n      prize.imgs && prize.imgs.forEach((imgInfo, imgIndex) => {\n        const prizeImgs = this.ImageCache['prizes']\n        if (!prizeImgs || !prizeImgs[prizeIndex]) return\n        const prizeImg = prizeImgs[prizeIndex][imgIndex]\n        if (!prizeImg) return\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(\n          prizeImg,\n          imgInfo,\n          this.prizeRadian * this.prizeRadius,\n          prizeHeight\n        )\n        const [xAxis, yAxis] = [this.getOffsetX(trueWidth), this.getHeight(imgInfo.top, prizeHeight)]\n        this.drawImage(ctx, prizeImg, xAxis, yAxis, trueWidth, trueHeight)\n      })\n      // 逐行绘制文字\n      prize.fonts && prize.fonts.forEach(font => {\n        const fontColor = font.fontColor || _defaultStyle.fontColor\n        const fontWeight = font.fontWeight || _defaultStyle.fontWeight\n        const fontSize = this.getLength(font.fontSize || _defaultStyle.fontSize)\n        const fontStyle = font.fontStyle || _defaultStyle.fontStyle\n        const wordWrap = Object.prototype.hasOwnProperty.call(font, 'wordWrap') ? font.wordWrap : _defaultStyle.wordWrap\n        const lengthLimit = font.lengthLimit || _defaultStyle.lengthLimit\n        const lineClamp = font.lineClamp || _defaultStyle.lineClamp\n        ctx.fillStyle = fontColor\n        ctx.font = `${fontWeight} ${fontSize >> 0}px ${fontStyle}`\n        let lines = [], text = String(font.text)\n        if (wordWrap) {\n          lines = splitText(ctx, removeEnter(text), (lines) => {\n            // 三角形临边\n            const adjacentSides = this.prizeRadius - getFontY(font, prizeHeight, lines.length)\n            // 三角形短边\n            const shortSide = adjacentSides * Math.tan(this.prizeRadian / 2)\n            // 最大宽度\n            let maxWidth = shortSide * 2 - this.getLength(_defaultConfig.gutter)\n            return this.getWidth(lengthLimit, maxWidth)\n          }, lineClamp)\n        } else {\n          lines = text.split('\\n')\n        }\n        lines.filter(line => !!line).forEach((line, lineIndex) => {\n          ctx.fillText(line, getFontX(line), getFontY(font, prizeHeight, lineIndex))\n        })\n      })\n      // 修正旋转角度和原点坐标\n      ctx.rotate(getAngle(360) - currMiddleDeg - getAngle(90))\n      ctx.translate(-x, -y)\n    })\n    ctx.restore()\n    // 绘制按钮\n    this.buttons.forEach((btn, btnIndex) => {\n      let radius = this.getHeight(btn.radius)\n      // 绘制背景颜色\n      this.maxBtnRadius = Math.max(this.maxBtnRadius, radius)\n      if (hasBackground(btn.background)) {\n        ctx.beginPath()\n        ctx.fillStyle = btn.background as string\n        ctx.arc(0, 0, radius, 0, Math.PI * 2, false)\n        ctx.fill()\n      }\n      // 绘制指针\n      if (btn.pointer && hasBackground(btn.background)) {\n        ctx.beginPath()\n        ctx.fillStyle = btn.background as string\n        ctx.moveTo(-radius, 0)\n        ctx.lineTo(radius, 0)\n        ctx.lineTo(0, -radius * 2)\n        ctx.closePath()\n        ctx.fill()\n      }\n      // 绘制按钮图片\n      btn.imgs && btn.imgs.forEach((imgInfo, imgIndex) => {\n        const btnImgs = this.ImageCache['buttons']\n        if (!btnImgs || !btnImgs[btnIndex]) return\n        const btnImg = btnImgs[btnIndex][imgIndex]\n        if (!btnImg) return\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(btnImg, imgInfo, radius * 2, radius * 2)\n        const [xAxis, yAxis] = [this.getOffsetX(trueWidth), this.getHeight(imgInfo.top, radius)]\n        this.drawImage(ctx, btnImg, xAxis, yAxis, trueWidth, trueHeight)\n      })\n      // 绘制按钮文字\n      btn.fonts && btn.fonts.forEach(font => {\n        let fontColor = font.fontColor || _defaultStyle.fontColor\n        let fontWeight = font.fontWeight || _defaultStyle.fontWeight\n        let fontSize = this.getLength(font.fontSize || _defaultStyle.fontSize)\n        let fontStyle = font.fontStyle || _defaultStyle.fontStyle\n        ctx.fillStyle = fontColor\n        ctx.font = `${fontWeight} ${fontSize >> 0}px ${fontStyle}`\n        String(font.text).split('\\n').forEach((line, lineIndex) => {\n          ctx.fillText(line, getFontX(line), getFontY(font, radius, lineIndex))\n        })\n      })\n    })\n    // 触发绘制后回调\n    config.afterDraw?.call(this, ctx)\n  }\n\n  /**\n   * 刻舟求剑\n   */\n  private carveOnGunwaleOfAMovingBoat (): void {\n    const { _defaultConfig, prizeFlag, prizeDeg, rotateDeg } = this\n    this.endTime = Date.now()\n    const stopDeg = this.stopDeg = rotateDeg\n    const speed = _defaultConfig.speed\n    const stopRange = (Math.random() * prizeDeg - prizeDeg / 2) * this.getLength(_defaultConfig.stopRange)\n    let i = 0, prevSpeed = 0, prevDeg = 0\n    while (++i) {\n      const endDeg = 360 * i - prizeFlag! * prizeDeg - rotateDeg - _defaultConfig.offsetDegree + stopRange - prizeDeg / 2\n      let currSpeed = quad.easeOut(this.FPS, stopDeg, endDeg, _defaultConfig.decelerationTime) - stopDeg\n      if (currSpeed > speed) {\n        this.endDeg = (speed - prevSpeed > currSpeed - speed) ? endDeg : prevDeg\n        break\n      }\n      prevDeg = endDeg\n      prevSpeed = currSpeed\n    }\n  }\n\n  /**\n   * 对外暴露: 开始抽奖方法\n   */\n  public play (): void {\n    if (this.step !== 0) return\n    // 记录游戏开始时间\n    this.startTime = Date.now()\n    // 重置中奖索引\n    this.prizeFlag = void 0\n    // 加速阶段\n    this.step = 1\n    // 开始游戏\n    this.run()\n  }\n\n  /**\n   * 对外暴露: 缓慢停止方法\n   * @param index 中奖索引\n   */\n  public stop (index?: number): void {\n    if (this.step === 0 || this.step === 3) return\n    // 如果没有传递中奖索引, 则通过range属性计算一个\n    if (!index && index !== 0) {\n      const rangeArr = this.prizes.map(item => item.range)\n      index = computeRange(rangeArr)\n    }\n    // 如果index是负数则停止游戏, 反之则传递中奖索引\n    if (index < 0) {\n      this.step = 0\n      this.prizeFlag = -1\n    } else {\n      this.step = 2\n      this.prizeFlag = index % this.prizes.length\n    }\n  }\n\n  /**\n   * 实际开始执行方法\n   * @param num 记录帧动画执行多少次\n   */\n  private run (num: number = 0): void {\n    const { rAF, step, prizeFlag, stopDeg, endDeg, _defaultConfig } = this\n    const { accelerationTime, decelerationTime, speed } = _defaultConfig\n    // 游戏结束\n    if (step === 0) {\n      this.endCallback?.(this.prizes.find((prize, index) => index === prizeFlag) || {})\n      return\n    }\n    // 如果等于 -1 就直接停止游戏\n    if (prizeFlag === -1) return\n    // 计算结束位置\n    if (step === 3 && !this.endDeg) this.carveOnGunwaleOfAMovingBoat()\n    // 计算时间间隔\n    const startInterval = Date.now() - this.startTime\n    const endInterval = Date.now() - this.endTime\n    let rotateDeg = this.rotateDeg\n    // \n    if (step === 1 || startInterval < accelerationTime) { // 加速阶段\n      // 记录帧率\n      this.FPS = startInterval / num\n      const currSpeed = quad.easeIn(startInterval, 0, speed, accelerationTime)\n      // 加速到峰值后, 进入匀速阶段\n      if (currSpeed === speed) {\n        this.step = 2\n      }\n      rotateDeg = rotateDeg + currSpeed % 360\n    } else if (step === 2) { // 匀速阶段\n      // 速度保持不变\n      rotateDeg = rotateDeg + speed % 360\n      // 如果 prizeFlag 有值, 则进入减速阶段\n      if (prizeFlag !== void 0 && prizeFlag >= 0) {\n        this.step = 3\n        // 清空上一次的位置信息\n        this.stopDeg = 0\n        this.endDeg = 0\n      }\n    } else if (step === 3) { // 减速阶段\n      // 开始缓慢停止\n      rotateDeg = quad.easeOut(endInterval, stopDeg, endDeg, decelerationTime)\n      if (endInterval >= decelerationTime) {\n        this.step = 0\n      }\n    } else {\n      // 出现异常\n      this.stop(-1)\n    }\n    this.rotateDeg = rotateDeg\n    this.draw()\n    rAF(this.run.bind(this, num + 1))\n  }\n\n  /**\n   * 获取相对宽度\n   * @param length 将要转换的宽度\n   * @param width 宽度计算百分比\n   * @return 返回相对宽度\n   */\n  private getWidth (\n    length: string | number | undefined,\n    width = this.prizeRadian * this.prizeRadius\n  ): number {\n    if (isExpectType(length, 'number')) return (length as number)\n    if (isExpectType(length, 'string')) return this.changeUnits(length as string, width)\n    return 0\n  }\n\n  /**\n   * 获取相对高度\n   * @param length 将要转换的高度\n   * @param height 高度计算百分比\n   * @return 返回相对高度\n   */\n  private getHeight (\n    length: string | number | undefined,\n    height: number = this.prizeRadius\n  ): number {\n    if (isExpectType(length, 'number')) return (length as number)\n    if (isExpectType(length, 'string')) return this.changeUnits(length as string, height)\n    return 0\n  }\n\n  /**\n   * 获取相对(居中)X坐标\n   * @param width\n   * @return 返回x坐标\n   */\n  private getOffsetX (width: number): number {\n    return -width / 2\n  }\n\n  /**\n   * 换算渲染坐标\n   * @param x\n   * @param y\n   */\n  protected conversionAxis (x: number, y: number): [number, number] {\n    const { config } = this\n    return [x / config.dpr - this.Radius, y / config.dpr - this.Radius]\n  }\n}\n","import Lucky from './lucky'\nimport { UserConfigType, ImgType } from '../types/index'\nimport LuckyGridConfig, {\n  BlockType,\n  PrizeType,\n  ButtonType,\n  CellFontType,\n  CellImgType,\n  RowsType,\n  ColsType,\n  CellType,\n  DefaultConfigType,\n  DefaultStyleType,\n  ActiveStyleType,\n  StartCallbackType,\n  EndCallbackType,\n} from '../types/grid'\nimport {\n  isExpectType,\n  removeEnter,\n  computePadding,\n  hasBackground,\n  computeRange,\n  splitText\n} from '../utils/index'\nimport { roundRectByArc, getLinearGradient } from '../utils/math'\nimport { quad } from '../utils/tween'\n\nexport default class LuckyGrid extends Lucky {\n  private rows: RowsType = 3\n  private cols: ColsType = 3\n  private blocks: Array<BlockType> = []\n  private prizes: Array<PrizeType> = []\n  private buttons: Array<ButtonType> = []\n  private button?: ButtonType\n  private defaultConfig: DefaultConfigType = {}\n  private defaultStyle: DefaultStyleType = {}\n  private activeStyle: ActiveStyleType = {}\n  private _defaultConfig: Required<DefaultConfigType> = {} as Required<DefaultConfigType>\n  private _defaultStyle: Required<DefaultStyleType> = {} as Required<DefaultStyleType>\n  private _activeStyle: Required<ActiveStyleType> = {} as Required<ActiveStyleType>\n  private startCallback?: StartCallbackType\n  private endCallback?: EndCallbackType\n  private cellWidth = 0                 // 格子宽度\n  private cellHeight = 0                // 格子高度\n  private startTime = 0                 // 开始时间戳\n  private endTime = 0                   // 结束时间戳\n  private currIndex = 0                 // 当前index累加\n  private stopIndex = 0                 // 刻舟求剑\n  private endIndex = 0                  // 停止索引\n  private demo = false                  // 是否自动游走\n  private timer = 0                     // 游走定时器\n  private FPS = 16.6                    // 屏幕刷新率\n  /**\n   * 游戏当前的阶段\n   * step = 0 时, 游戏尚未开始\n   * step = 1 时, 此时处于加速阶段\n   * step = 2 时, 此时处于匀速阶段\n   * step = 3 时, 此时处于减速阶段\n   */\n  private step: 0 | 1 | 2 | 3 = 0\n  /**\n   * 中奖索引\n   * prizeFlag = undefined 时, 处于开始抽奖阶段, 正常旋转\n   * prizeFlag >= 0 时, 说明stop方法被调用, 并且传入了中奖索引\n   * prizeFlag === -1 时, 说明stop方法被调用, 并且传入了负值, 本次抽奖无效\n   */\n  private prizeFlag: number | undefined = -1\n  // 所有格子\n  private cells: CellType<CellFontType, CellImgType>[] = []\n  // 奖品区域几何信息\n  private prizeArea: { x: number, y: number, w: number, h: number } | undefined\n  // 图片缓存\n  private ImageCache = {\n    blocks: [] as Array<ImgType[]>,\n    prizes: [] as Array<ImgType[]>,\n    buttons: [] as Array<{ defaultImg: ImgType, activeImg?: ImgType }[]>\n  }\n\n  /**\n   * 九宫格构造器\n   * @param config 配置项\n   * @param data 抽奖数据\n   */\n  constructor (config: UserConfigType, data: LuckyGridConfig) {\n    super(config, {\n      width: data.width,\n      height: data.height\n    })\n    this.initData(data)\n    this.initWatch()\n    this.initComputed()\n    // 创建前回调函数\n    config.beforeCreate?.call(this)\n    // 首次初始化\n    this.init()\n  }\n\n  protected resize(): void {\n    super.resize()\n    this.draw()\n    this.config.afterResize?.()\n  }\n\n  protected initLucky (): void {\n    this.cellWidth = 0\n    this.cellHeight = 0\n    this.startTime = 0\n    this.endTime = 0\n    this.currIndex = 0\n    this.stopIndex = 0\n    this.endIndex = 0\n    this.demo = false\n    this.timer = 0\n    this.FPS = 16.6\n    this.prizeFlag = -1\n    this.step = 0\n    super.initLucky()\n  }\n\n  /**\n   * 初始化数据\n   * @param data\n   */\n  private initData (data: LuckyGridConfig): void {\n    this.$set(this, 'width', data.width || '300px')\n    this.$set(this, 'height', data.height || '300px')\n    this.$set(this, 'rows', Number(data.rows) || 3)\n    this.$set(this, 'cols', Number(data.cols) || 3)\n    this.$set(this, 'blocks', data.blocks || [])\n    this.$set(this, 'prizes', data.prizes || [])\n    this.$set(this, 'buttons', data.buttons || [])\n    // 临时过渡代码, 升级到2.x即可删除\n    this.$set(this, 'button', data.button)\n    this.$set(this, 'defaultConfig', data.defaultConfig || {})\n    this.$set(this, 'defaultStyle', data.defaultStyle || {})\n    this.$set(this, 'activeStyle', data.activeStyle || {})\n    this.$set(this, 'startCallback', data.start)\n    this.$set(this, 'endCallback', data.end)\n  }\n\n  /**\n   * 初始化属性计算\n   */\n  private initComputed (): void {\n    // 默认配置\n    this.$computed(this, '_defaultConfig', () => {\n      const config = {\n        gutter: 5,\n        speed: 20,\n        accelerationTime: 2500,\n        decelerationTime: 2500,\n        ...this.defaultConfig\n      }\n      config.gutter = this.getLength(config.gutter)\n      config.speed = config.speed / 40\n      return config\n    })\n    // 默认样式\n    this.$computed(this, '_defaultStyle', () => {\n      return {\n        borderRadius: 20,\n        fontColor: '#000',\n        fontSize: '18px',\n        fontStyle: 'sans-serif',\n        fontWeight: '400',\n        background: 'rgba(0,0,0,0)',\n        shadow: '',\n        wordWrap: true,\n        lengthLimit: '90%',\n        ...this.defaultStyle\n      }\n    })\n    // 中奖样式\n    this.$computed(this, '_activeStyle', () => {\n      return {\n        background: '#ffce98',\n        shadow: '',\n        ...this.activeStyle\n      }\n    })\n  }\n\n  /**\n   * 初始化观察者\n   */\n  private initWatch (): void {\n    // 重置宽度\n    this.$watch('width', (newVal: string | number) => {\n      this.data.width = newVal\n      this.resize()\n    })\n    // 重置高度\n    this.$watch('height', (newVal: string | number) => {\n      this.data.height = newVal\n      this.resize()\n    })\n    // 监听 blocks 数据的变化\n    this.$watch('blocks', (newData: Array<BlockType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    // 监听 prizes 数据的变化\n    this.$watch('prizes', (newData: Array<PrizeType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    // 监听 button 数据的变化\n    this.$watch('buttons', (newData: Array<ButtonType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    this.$watch('rows', () => this.init())\n    this.$watch('cols', () => this.init())\n    this.$watch('defaultConfig', () => this.draw(), { deep: true })\n    this.$watch('defaultStyle', () => this.draw(), { deep: true })\n    this.$watch('activeStyle', () => this.draw(), { deep: true })\n    this.$watch('startCallback', () => this.init())\n    this.$watch('endCallback', () => this.init())\n  }\n\n  /**\n   * 初始化 canvas 抽奖\n   */\n  public async init (): Promise<void> {\n    this.initLucky()\n    const { config } = this\n    // 初始化前回调函数\n    config.beforeInit?.call(this)\n    // 先画一次防止闪烁\n    this.draw()\n    // 异步加载图片\n    await this.initImageCache()\n    // 初始化后回调函数\n    config.afterInit?.call(this)\n  }\n\n  private initImageCache (): Promise<void> {\n    return new Promise((resolve) => {\n      const btnImgs = this.buttons.map(btn => btn.imgs)\n      if (this.button) btnImgs.push(this.button.imgs)\n      const willUpdateImgs = {\n        blocks: this.blocks.map(block => block.imgs),\n        prizes: this.prizes.map(prize => prize.imgs),\n        buttons: btnImgs,\n      }\n      ;(<(keyof typeof willUpdateImgs)[]>Object.keys(willUpdateImgs)).forEach(imgName => {\n        const willUpdate = willUpdateImgs[imgName]\n        // 循环遍历所有图片\n        const allPromise: Promise<void>[] = []\n        willUpdate && willUpdate.forEach((imgs, cellIndex) => {\n          imgs && imgs.forEach((imgInfo, imgIndex) => {\n            allPromise.push(this.loadAndCacheImg(imgName, cellIndex, imgName, imgIndex))\n          })\n        })\n        Promise.all(allPromise).then(() => {\n          this.draw()\n          resolve()\n        })\n      })\n    })\n  }\n\n  /**\n   * canvas点击事件\n   * @param e 事件参数\n   */\n  protected handleClick (e: MouseEvent): void {\n    const { ctx } = this\n    ;[\n      ...this.buttons,\n      this.button\n    ].forEach(btn => {\n      if (!btn) return\n      const [x, y, width, height] = this.getGeometricProperty([\n        btn.x, btn.y, btn.col || 1, btn.row || 1\n      ])\n      ctx.beginPath()\n      ctx.rect(x, y, width, height)\n      if (!ctx.isPointInPath(e.offsetX, e.offsetY)) return\n      if (this.startTime) return\n      // 如果btn里有单独的回调方法, 优先触发\n      if (typeof btn.callback === 'function') btn.callback.call(this, btn)\n      // 最后触发公共回调\n      this.startCallback?.(e, btn)\n    })\n  }\n\n  /**\n   * 根据索引单独加载指定图片并缓存\n   * @param cellName 模块名称\n   * @param cellIndex 模块索引\n   * @param imgName 模块对应的图片缓存\n   * @param imgIndex 图片索引\n   */\n  private async loadAndCacheImg (\n    cellName: keyof typeof this.ImageCache,\n    cellIndex: number,\n    imgName: keyof typeof this.ImageCache,\n    imgIndex: number\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let cell: BlockType | PrizeType | ButtonType = this[cellName][cellIndex]\n      // 临时过渡代码, 升级到2.x即可删除\n      if (cellName === 'buttons' && !this.buttons.length && this.button) {\n        cell = this.button\n      }\n      if (!cell || !cell.imgs) return\n      const imgInfo = cell.imgs[imgIndex]\n      if (!imgInfo) return\n      const ImageCache = this.ImageCache\n      if (!ImageCache[imgName][cellIndex]) ImageCache[imgName][cellIndex] = []\n      // 异步加载图片\n      const request = [\n        this.loadImg(imgInfo.src, imgInfo),\n        imgInfo['activeSrc'] && this.loadImg(imgInfo['activeSrc'], imgInfo, '$activeResolve')\n      ]\n      Promise.all(request).then(([defaultImg, activeImg]) => {\n        const formatter = imgInfo.formatter\n        // 对图片进行处理\n        if (typeof formatter === 'function') {\n          defaultImg = formatter.call(this, defaultImg)\n          if (activeImg) {\n            activeImg = formatter.call(this, activeImg)\n          }\n        }\n        ImageCache[imgName][cellIndex][imgIndex] = { defaultImg, activeImg }\n        resolve()\n      }).catch(err => {\n        console.error(`${cellName}[${cellIndex}].imgs[${imgIndex}] ${err}`)\n        reject()\n      })\n    })\n  }\n\n  /**\n   * 计算图片的渲染宽高\n   * @param imgObj 图片标签元素\n   * @param imgInfo 图片信息\n   * @param cell 格子信息\n   * @return [渲染宽度, 渲染高度]\n   */\n  private computedWidthAndHeight (\n    imgObj: ImgType,\n    imgInfo: CellImgType,\n    cell: CellType<CellFontType, CellImgType>\n  ): [number, number] {\n    // 根据配置的样式计算图片的真实宽高\n    if (!imgInfo.width && !imgInfo.height) {\n      // 如果没有配置宽高, 则使用图片本身的宽高\n      return [imgObj.width, imgObj.height]\n    } else if (imgInfo.width && !imgInfo.height) {\n      // 如果只填写了宽度, 没填写高度\n      let trueWidth = this.getWidth(imgInfo.width, cell.col)\n      // 那高度就随着宽度进行等比缩放\n      return [trueWidth, imgObj.height * (trueWidth / imgObj.width)]\n    } else if (!imgInfo.width && imgInfo.height) {\n      // 如果只填写了宽度, 没填写高度\n      let trueHeight = this.getHeight(imgInfo.height, cell.row)\n      // 那宽度就随着高度进行等比缩放\n      return [imgObj.width * (trueHeight / imgObj.height), trueHeight]\n    }\n    // 如果宽度和高度都填写了, 就分别计算\n    return [\n      this.getWidth(imgInfo.width, cell.col),\n      this.getHeight(imgInfo.height, cell.row)\n    ]\n  }\n\n  /**\n   * 绘制九宫格抽奖\n   */\n  protected draw (): void {\n    const { config, ctx, _defaultConfig, _defaultStyle, _activeStyle } = this\n    // 触发绘制前回调\n    config.beforeDraw?.call(this, ctx)\n    // 清空画布\n    ctx.clearRect(0, 0, this.boxWidth, this.boxHeight)\n    // 合并奖品和按钮\n    this.cells = [\n      ...this.prizes,\n      ...this.buttons\n    ]\n    if (this.button) this.cells.push(this.button)\n    this.cells.forEach(cell => {\n      cell.col = cell.col || 1\n      cell.row = cell.row || 1\n    })\n    // 计算获取奖品区域的几何信息\n    this.prizeArea = this.blocks.reduce(({x, y, w, h}, block) => {\n      const [paddingTop, paddingBottom, paddingLeft, paddingRight] = computePadding(block)\n      const r = block.borderRadius ? this.getLength(block.borderRadius) : 0\n      // 绘制边框\n      const background = block.background || _defaultStyle.background\n      if (hasBackground(background)) {\n        ctx.fillStyle = this.handleBackground(x, y, w, h, background)\n        roundRectByArc(ctx, x, y, w, h, r)\n        ctx.fill()\n      }\n      return {\n        x: x + paddingLeft,\n        y: y + paddingTop,\n        w: w - paddingLeft - paddingRight,\n        h: h - paddingTop - paddingBottom\n      }\n    }, { x: 0, y: 0, w: this.boxWidth, h: this.boxHeight })\n    // 计算单一奖品格子的宽度和高度\n    this.cellWidth = (this.prizeArea.w - _defaultConfig.gutter * (this.cols - 1)) / this.cols\n    this.cellHeight = (this.prizeArea.h - _defaultConfig.gutter * (this.rows - 1)) / this.rows\n    // 绘制所有格子\n    this.cells.forEach((cell, cellIndex) => {\n      let [x, y, width, height] = this.getGeometricProperty([cell.x, cell.y, cell.col!, cell.row!])\n      // 默认不显示中奖标识\n      let isActive = false\n      // 只要 prizeFlag 不是负数, 就显示中奖标识\n      if (this.prizeFlag === void 0 || this.prizeFlag > -1) {\n        isActive = cellIndex === this.currIndex % this.prizes.length >> 0\n      }\n      // 绘制背景色\n      const background = isActive ? _activeStyle.background : (cell.background || _defaultStyle.background)\n      if (hasBackground(background)) {\n        // 处理阴影 (暂时先用any, 这里后续要优化)\n        const shadow: any = (\n          isActive ? _activeStyle.shadow : (cell.shadow || _defaultStyle.shadow)\n        )\n          .replace(/px/g, '') // 清空px字符串\n          .split(',')[0].split(' ') // 防止有人声明多个阴影, 截取第一个阴影\n          .map((n, i) => i < 3 ? Number(n) : n) // 把数组的前三个值*像素比\n        // 绘制阴影\n        if (shadow.length === 4) {\n          ctx.shadowColor = shadow[3]\n          ctx.shadowOffsetX = shadow[0] * config.dpr\n          ctx.shadowOffsetY = shadow[1] * config.dpr\n          ctx.shadowBlur = shadow[2]\n          // 修正(格子+阴影)的位置, 这里使用逗号运算符\n          shadow[0] > 0 ? (width -= shadow[0]) : (width += shadow[0], x -= shadow[0])\n          shadow[1] > 0 ? (height -= shadow[1]) : (height += shadow[1], y -= shadow[1])\n        }\n        // 绘制背景\n        ctx.fillStyle = this.handleBackground(x, y, width, height, background)\n        const borderRadius = this.getLength(cell.borderRadius ? cell.borderRadius : _defaultStyle.borderRadius)\n        roundRectByArc(ctx, x, y, width, height, borderRadius)\n        ctx.fill()\n        // 清空阴影\n        ctx.shadowColor = 'rgba(0, 0, 0, 0)'\n        ctx.shadowOffsetX = 0\n        ctx.shadowOffsetY = 0\n        ctx.shadowBlur = 0\n      }\n      // 修正图片缓存\n      let cellName = 'prizes'\n      if (cellIndex >= this.prizes.length) {\n        cellName = 'buttons'\n        cellIndex -= this.prizes.length\n      }\n      // 绘制图片\n      cell.imgs && cell.imgs.forEach((imgInfo, imgIndex) => {\n        const cellImgs = this.ImageCache[cellName]\n        if (!cellImgs[cellIndex]) return\n        const cellImg = cellImgs[cellIndex][imgIndex]\n        if (!cellImg) return\n        const renderImg = (isActive && cellImg['activeImg']) || cellImg.defaultImg\n        if (!renderImg) return\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(renderImg, imgInfo, cell)\n        const [xAxis, yAxis] = [\n          x + this.getOffsetX(trueWidth, cell.col),\n          y + this.getHeight(imgInfo.top, cell.row)\n        ]\n        this.drawImage(ctx, renderImg, xAxis, yAxis, trueWidth, trueHeight)\n      })\n      // 绘制文字\n      cell.fonts && cell.fonts.forEach(font => {\n        // 字体样式\n        const style = isActive && _activeStyle.fontStyle\n          ? _activeStyle.fontStyle\n          : (font.fontStyle || _defaultStyle.fontStyle)\n        // 字体加粗\n        const fontWeight = isActive && _activeStyle.fontWeight\n          ? _activeStyle.fontWeight\n          : (font.fontWeight || _defaultStyle.fontWeight)\n        // 字体大小\n        const size = isActive && _activeStyle.fontSize\n          ? this.getLength(_activeStyle.fontSize)\n          : this.getLength(font.fontSize || _defaultStyle.fontSize)\n        // 字体行高\n        const lineHeight = isActive && _activeStyle.lineHeight\n          ? _activeStyle.lineHeight\n          : font.lineHeight || _defaultStyle.lineHeight || font.fontSize || _defaultStyle.fontSize\n        const wordWrap = Object.prototype.hasOwnProperty.call(font, 'wordWrap') ? font.wordWrap : _defaultStyle.wordWrap\n        const lengthLimit = font.lengthLimit || _defaultStyle.lengthLimit\n        const lineClamp = font.lineClamp || _defaultStyle.lineClamp\n        ctx.font = `${fontWeight} ${size >> 0}px ${style}`\n        ctx.fillStyle = (isActive && _activeStyle.fontColor) ? _activeStyle.fontColor : (font.fontColor || _defaultStyle.fontColor)\n        let lines = [], text = String(font.text)\n        // 计算文字换行\n        if (wordWrap) {\n          // 最大宽度\n          let maxWidth = this.getWidth(lengthLimit, cell.col)\n          lines = splitText(ctx, removeEnter(text), () => maxWidth, lineClamp)\n        } else {\n          lines = text.split('\\n')\n        }\n        lines.forEach((line, lineIndex) => {\n          ctx.fillText(\n            line,\n            x + this.getOffsetX(ctx.measureText(line).width, cell.col),\n            y + this.getHeight(font.top, cell.row) + (lineIndex + 1) * this.getLength(lineHeight)\n          )\n        })\n      })\n    })\n    // 触发绘制后回调\n    config.afterDraw?.call(this, ctx)\n  }\n\n  /**\n   * 处理背景色\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   * @param background\n   * @param isActive\n   */\n  private handleBackground (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    background: string,\n  ) {\n    const { ctx } = this\n    // 处理线性渐变\n    if (background.includes('linear-gradient')) {\n      background = getLinearGradient(ctx, x, y, width, height, background)\n    }\n    return background\n  }\n\n  /**\n   * 刻舟求剑\n   */\n  private carveOnGunwaleOfAMovingBoat (): void {\n    const { _defaultConfig, prizeFlag, currIndex } = this\n    this.endTime = Date.now()\n    const stopIndex = this.stopIndex = currIndex\n    const speed = _defaultConfig.speed\n    let i = 0, prevSpeed = 0, prevIndex = 0\n    while (++i) {\n      const endIndex = this.prizes.length * i + prizeFlag! - (stopIndex)\n      const currSpeed = quad.easeOut(this.FPS, stopIndex, endIndex, _defaultConfig.decelerationTime) - stopIndex\n      if (currSpeed > speed) {\n        this.endIndex = (speed - prevSpeed > currSpeed - speed) ? endIndex : prevIndex\n        break\n      }\n      prevIndex = endIndex\n      prevSpeed = currSpeed\n    }\n  }\n\n  /**\n   * 对外暴露: 开始抽奖方法\n   */\n  public play (): void {\n    if (this.step !== 0) return\n    // 记录游戏开始的时间\n    this.startTime = Date.now()\n    // 重置中奖索引\n    this.prizeFlag = void 0\n    // 开始加速\n    this.step = 1\n    // 开始运行\n    this.run()\n  }\n\n  /**\n   * 对外暴露: 缓慢停止方法\n   * @param index 中奖索引\n   */\n  public stop (index?: number): void {\n    if (this.step === 0 || this.step === 3) return\n    // 如果没有传递中奖索引, 则通过range属性计算一个\n    if (!index && index !== 0) {\n      const rangeArr = this.prizes.map(item => item.range)\n      index = computeRange(rangeArr)\n    }\n    // 如果index是负数则停止游戏, 反之则传递中奖索引\n    if (index < 0) {\n      this.step = 0\n      this.prizeFlag = -1\n    } else {\n      this.step = 2\n      this.prizeFlag = index % this.prizes.length\n    }\n  }\n\n  /**\n   * 实际开始执行方法\n   * @param num 记录帧动画执行多少次\n   */\n  private run (num: number = 0): void {\n    const { rAF, step, prizes, prizeFlag, stopIndex, endIndex, _defaultConfig } = this\n    const { accelerationTime, decelerationTime, speed } = _defaultConfig\n    // 结束游戏\n    if (step === 0) {\n      this.endCallback?.(this.prizes.find((prize, index) => index === prizeFlag) || {})\n      return\n    }\n    // 如果等于 -1 就直接停止游戏\n    if (prizeFlag === -1) return\n    // 计算结束位置\n    if (step === 3 && !this.endIndex) this.carveOnGunwaleOfAMovingBoat()\n    // 计算时间间隔\n    const startInterval = Date.now() - this.startTime\n    const endInterval = Date.now() - this.endTime\n    let currIndex = this.currIndex\n    // \n    if (step === 1 || startInterval < accelerationTime) { // 加速阶段\n      // 记录帧率\n      this.FPS = startInterval / num\n      const currSpeed = quad.easeIn(startInterval, 0.1, speed - 0.1, accelerationTime)\n      // 加速到峰值后, 进入匀速阶段\n      if (currSpeed === speed) {\n        this.step = 2\n      }\n      currIndex = currIndex + currSpeed % prizes.length\n    } else if (step === 2) { // 匀速阶段\n      // 速度保持不变\n      currIndex = currIndex + speed % prizes.length\n      // 如果 prizeFlag 有值, 则进入减速阶段\n      if (prizeFlag !== void 0 && prizeFlag >= 0) {\n        this.step = 3\n        // 清空上一次的位置信息\n        this.stopIndex = 0\n        this.endIndex = 0\n      }\n    } else if (step === 3) { // 减速阶段\n      // 开始缓慢停止\n      currIndex = quad.easeOut(endInterval, stopIndex, endIndex, decelerationTime)\n      if (endInterval >= decelerationTime) {\n        this.step = 0\n      }\n    } else {\n      // 出现异常\n      this.stop(-1)\n    }\n    this.currIndex = currIndex\n    this.draw()\n    rAF(this.run.bind(this, num + 1))\n  }\n\n  /**\n   * 计算奖品格子的几何属性\n   * @param { array } [...矩阵坐标, col, row]\n   * @return { array } [...真实坐标, width, height]\n   */\n  private getGeometricProperty ([x, y, col = 1, row = 1]: number[]) {\n    const { cellWidth, cellHeight } = this\n    const gutter = this._defaultConfig.gutter\n    let res = [\n      this.prizeArea!.x + (cellWidth + gutter) * x,\n      this.prizeArea!.y + (cellHeight + gutter) * y\n    ]\n    col && row && res.push(\n      cellWidth * col + gutter * (col - 1),\n      cellHeight * row + gutter * (row - 1),\n    )\n    return res\n  }\n\n  /**\n   * 转换并获取宽度\n   * @param width 将要转换的宽度\n   * @param col 横向合并的格子\n   * @return 返回相对宽度\n   */\n  private getWidth (\n    width: string | number | undefined,\n    col: number = 1\n  ): number {\n    if (isExpectType(width, 'number')) return (width as number)\n    if (isExpectType(width, 'string')) return this.changeUnits(\n      width as string,\n      this.cellWidth * col + this._defaultConfig.gutter * (col - 1)\n    )\n    return 0\n  }\n\n  /**\n   * 转换并获取高度\n   * @param height 将要转换的高度\n   * @param row 纵向合并的格子\n   * @return 返回相对高度\n   */\n  private getHeight (\n    height: string | number | undefined,\n    row: number = 1\n  ): number {\n    if (isExpectType(height, 'number')) return (height as number)\n    if (isExpectType(height, 'string')) return this.changeUnits(\n      height as string,\n      this.cellHeight * row + this._defaultConfig.gutter * (row - 1)\n    )\n    return 0\n  }\n\n  /**\n   * 获取相对(居中)X坐标\n   * @param width\n   * @param col\n   */\n  private getOffsetX (width: number, col = 1): number {\n    return (this.cellWidth * col + this._defaultConfig.gutter * (col - 1) - width) / 2\n  }\n\n  /**\n   * 换算渲染坐标\n   * @param x\n   * @param y\n   */\n  protected conversionAxis (x: number, y: number): [number, number] {\n    const { config } = this\n    return [x / config.dpr, y / config.dpr]\n  }\n}\n","import Lucky from './lucky'\nimport { UserConfigType, ImgType, ImgItemType, Tuple } from '../types/index'\nimport SlotMachineConfig, {\n  BlockType,\n  PrizeType,\n  SlotType,\n  DefaultConfigType,\n  DefaultStyleType,\n  EndCallbackType,\n} from '../types/slot'\nimport {\n  get, has,\n  isExpectType,\n  removeEnter,\n  computePadding,\n  hasBackground,\n  computeRange,\n  splitText,\n  getSortedArrayByIndex\n} from '../utils/index'\nimport { roundRectByArc } from '../utils/math'\nimport { quad } from '../utils/tween'\n\nexport default class SlotMachine extends Lucky {\n  // 背景\n  private blocks: Array<BlockType> = []\n  // 奖品列表\n  private prizes: Array<PrizeType> = []\n  // 插槽列表\n  private slots: Array<SlotType> = []\n  // 默认配置\n  private defaultConfig: DefaultConfigType = {}\n  private _defaultConfig: Required<DefaultConfigType> = {} as Required<DefaultConfigType>\n  // 默认样式\n  private defaultStyle: DefaultStyleType = {}\n  private _defaultStyle: Required<DefaultStyleType> = {} as Required<DefaultStyleType>\n  private endCallback: EndCallbackType = () => {}\n  // 离屏canvas\n  private _offscreenCanvas?: HTMLCanvasElement\n  private cellWidth = 0             // 格子宽度\n  private cellHeight = 0            // 格子高度\n  private cellAndSpacing = 0        // 格子+间距\n  private widthAndSpacing = 0       // 格子宽度+列间距\n  private heightAndSpacing = 0      // 格子高度+行间距\n  private FPS = 16.6                // 屏幕刷新率\n  private scroll: number[] = []     // 滚动的长度\n  private stopScroll: number[] = [] // 刻舟求剑\n  private endScroll: number[] = []  // 最终停止的长度\n  private startTime = 0             // 开始游戏的时间\n  private endTime = 0               // 开始停止的时间\n  /**\n   * 游戏当前的阶段\n   * step = 0 时, 游戏尚未开始\n   * step = 1 时, 此时处于加速阶段\n   * step = 2 时, 此时处于匀速阶段\n   * step = 3 时, 此时处于减速阶段\n   */\n  private step: 0 | 1 | 2 | 3 = 0\n  /**\n   * 中奖索引\n   * prizeFlag = undefined 时, 处于开始抽奖阶段, 正常旋转\n   * prizeFlag >= 0 时, 说明stop方法被调用, 并且传入了中奖索引\n   * prizeFlag === -1 时, 说明stop方法被调用, 并且传入了负值, 本次抽奖无效\n   */\n  private prizeFlag: number | undefined = -1\n  // 奖品区域几何信息\n  private prizeArea?: { x: number, y: number, w: number, h: number }\n  // 图片缓存\n  private ImageCache = {\n    blocks: [] as Array<ImgType[]>,\n    prizes: [] as Array<ImgType[]>,\n  }\n\n  /**\n   * 老虎机构造器\n   * @param config 配置项\n   * @param data 抽奖数据\n   */\n   constructor (config: UserConfigType, data: SlotMachineConfig) {\n    super(config, {\n      width: data.width,\n      height: data.height\n    })\n    this.initData(data)\n    this.initWatch()\n    this.initComputed()\n    // 创建前回调函数\n    config.beforeCreate?.call(this)\n    // 首次初始化\n    this.init()\n  }\n\n  protected resize(): void {\n    super.resize()\n    this.draw()\n    this.config.afterResize?.()\n  }\n\n  protected initLucky (): void {\n    this.FPS = 16.6\n    this.prizeFlag = -1\n    this.step = 0\n    super.initLucky()\n  }\n\n  /**\n   * 初始化数据\n   * @param data\n   */\n  private initData (data: SlotMachineConfig): void {\n    this.$set(this, 'width', data.width || '300px')\n    this.$set(this, 'height', data.height || '300px')\n    this.$set(this, 'blocks', data.blocks || [])\n    this.$set(this, 'prizes', data.prizes || [])\n    this.$set(this, 'slots', data.slots || [])\n    this.$set(this, 'defaultConfig', data.defaultConfig || {})\n    this.$set(this, 'defaultStyle', data.defaultStyle || {})\n    this.$set(this, 'endCallback', data.end)\n  }\n\n  /**\n   * 初始化属性计算\n   */\n  private initComputed (): void {\n    // 默认配置\n    this.$computed(this, '_defaultConfig', () => {\n      const config = {\n        mode: 'vertical',\n        rowSpacing: 0,\n        colSpacing: 5,\n        speed: 20,\n        direction: 1,\n        accelerationTime: 2500,\n        decelerationTime: 2500,\n        ...this.defaultConfig\n      }\n      config.rowSpacing = this.getLength(config.rowSpacing)\n      config.colSpacing = this.getLength(config.colSpacing)\n      return config\n    })\n    // 默认样式\n    this.$computed(this, '_defaultStyle', () => {\n      return {\n        borderRadius: 0,\n        fontColor: '#000',\n        fontSize: '18px',\n        fontStyle: 'sans-serif',\n        fontWeight: '400',\n        background: 'rgba(0,0,0,0)',\n        shadow: '',\n        wordWrap: true,\n        lengthLimit: '90%',\n        ...this.defaultStyle\n      }\n    })\n  }\n\n  /**\n   * 初始化观察者\n   */\n  private initWatch (): void {\n    // 重置宽度\n    this.$watch('width', (newVal: string | number) => {\n      this.data.width = newVal\n      this.resize()\n    })\n    // 重置高度\n    this.$watch('height', (newVal: string | number) => {\n      this.data.height = newVal\n      this.resize()\n    })\n    // 监听 blocks 数据的变化\n    this.$watch('blocks', (newData: Array<BlockType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    // 监听 prizes 数据的变化\n    this.$watch('prizes', (newData: Array<PrizeType>) => {\n      this.initImageCache()\n    }, { deep: true })\n    // 监听 prizes 数据的变化\n    this.$watch('slots', (newData: Array<PrizeType>) => {\n      this.drawOffscreenCanvas()\n      this.draw()\n    }, { deep: true })\n    this.$watch('defaultConfig', () => this.draw(), { deep: true })\n    this.$watch('defaultStyle', () => this.draw(), { deep: true })\n    this.$watch('endCallback', () => this.init())\n  }\n\n  /**\n   * 初始化 canvas 抽奖\n   */\n  public async init (): Promise<void> {\n    this.initLucky()\n    const { config } = this\n    // 初始化前回调函数\n    config.beforeInit?.call(this)\n    // 先绘制一次\n    this.drawOffscreenCanvas()\n    this.draw()\n    // 异步加载图片\n    await this.initImageCache()\n    // 初始化后回调函数\n    config.afterInit?.call(this)\n  }\n\n  private initImageCache (): Promise<void> {\n    return new Promise((resolve) => {\n      const willUpdateImgs = {\n        blocks: this.blocks.map(block => block.imgs),\n        prizes: this.prizes.map(prize => prize.imgs),\n      }\n      ;(<(keyof typeof willUpdateImgs)[]>Object.keys(willUpdateImgs)).forEach(imgName => {\n        const willUpdate = willUpdateImgs[imgName]\n        // 循环遍历所有图片\n        const allPromise: Promise<void>[] = []\n        willUpdate && willUpdate.forEach((imgs, cellIndex) => {\n          imgs && imgs.forEach((imgInfo, imgIndex) => {\n            allPromise.push(this.loadAndCacheImg(imgName, cellIndex, imgName, imgIndex))\n          })\n        })\n        Promise.all(allPromise).then(() => {\n          this.drawOffscreenCanvas()\n          this.draw()\n          resolve()\n        })\n      })\n    })\n  }\n\n  /**\n   * 根据索引单独加载指定图片并缓存\n   * @param cellName 模块名称\n   * @param cellIndex 模块索引\n   * @param imgName 模块对应的图片缓存\n   * @param imgIndex 图片索引\n   */\n  private async loadAndCacheImg (\n    cellName: keyof typeof this.ImageCache,\n    cellIndex: number,\n    imgName: keyof typeof this.ImageCache,\n    imgIndex: number\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let cell: BlockType | PrizeType = this[cellName][cellIndex]\n      if (!cell || !cell.imgs) return\n      const imgInfo = cell.imgs[imgIndex]\n      if (!imgInfo) return\n      const ImageCache = this.ImageCache\n      if (!ImageCache[imgName][cellIndex]) ImageCache[imgName][cellIndex] = []\n      // 异步加载图片\n      this.loadImg(imgInfo.src, imgInfo).then(currImg => {\n        if (typeof imgInfo.formatter === 'function') {\n          currImg = imgInfo.formatter.call(this, currImg)\n        }\n        ImageCache[imgName][cellIndex][imgIndex] = currImg\n        resolve()\n      }).catch(err => {\n        console.error(`${cellName}[${cellIndex}].imgs[${imgIndex}] ${err}`)\n        reject()\n      })\n    })\n  }\n\n  /**\n   * 计算图片的渲染宽高\n   * @param imgObj 图片标签元素\n   * @param imgInfo 图片信息\n   * @param maxWidth 最大宽度\n   * @param maxHeight 最大高度\n   * @return [渲染宽度, 渲染高度]\n   */\n  private computedWidthAndHeight (\n    imgObj: ImgType,\n    imgInfo: ImgItemType,\n    maxWidth: number,\n    maxHeight: number\n  ): [number, number] {\n    // 根据配置的样式计算图片的真实宽高\n    if (!imgInfo.width && !imgInfo.height) {\n      // 如果没有配置宽高, 则使用图片本身的宽高\n      return [imgObj.width, imgObj.height]\n    } else if (imgInfo.width && !imgInfo.height) {\n      // 如果只填写了宽度, 没填写高度\n      let trueWidth = this.getWidth(imgInfo.width, maxWidth)\n      // 那高度就随着宽度进行等比缩放\n      return [trueWidth, imgObj.height * (trueWidth / imgObj.width)]\n    } else if (!imgInfo.width && imgInfo.height) {\n      // 如果只填写了宽度, 没填写高度\n      let trueHeight = this.getHeight(imgInfo.height, maxHeight)\n      // 那宽度就随着高度进行等比缩放\n      return [imgObj.width * (trueHeight / imgObj.height), trueHeight]\n    }\n    // 如果宽度和高度都填写了, 就如实计算\n    return [\n      this.getWidth(imgInfo.width, maxWidth),\n      this.getHeight(imgInfo.height, maxHeight)\n    ]\n  }\n\n  /**\n   * 绘制离屏canvas\n   */\n  protected drawOffscreenCanvas (): void {\n    const { _defaultConfig, _defaultStyle } = this\n    const { x, y, w, h } = this.drawBlocks()!\n    // 计算单一奖品格子的宽度和高度\n    const prizesLen = this.prizes.length\n    const { cellWidth, cellHeight, widthAndSpacing, heightAndSpacing } = this.displacementWidthOrHeight()\n    const defaultOrder = new Array(prizesLen).fill(void 0).map((v, i) => i)\n    let maxOrderLen = 0, maxOffWidth = 0, maxOffHeight = 0\n    this.slots.forEach((slot, slotIndex) => {\n      // 初始化 scroll 的值\n      if (this.scroll[slotIndex] === void 0) this.scroll[slotIndex] = 0\n      // 如果没有order属性, 就填充prizes\n      slot.order = slot.order || defaultOrder\n      // 计算最大值\n      const currLen = slot.order.length\n      maxOrderLen = Math.max(maxOrderLen, currLen)\n      maxOffWidth = Math.max(maxOffWidth, w + widthAndSpacing * currLen)\n      maxOffHeight = Math.max(maxOffHeight, h + heightAndSpacing * currLen)\n    })\n    // 创建一个离屏Canvas来存储画布的内容\n    const { _offscreenCanvas, _ctx } = this.getOffscreenCanvas(maxOffWidth, maxOffHeight)!\n    this._offscreenCanvas = _offscreenCanvas\n    // 绘制插槽\n    this.slots.forEach((slot, slotIndex) => {\n      const cellX = cellWidth * slotIndex\n      const cellY = cellHeight * slotIndex\n      let lengthOfCopy = 0\n      // 绘制奖品\n      const newPrizes = getSortedArrayByIndex(this.prizes, slot.order!)\n      // 如果没有奖品则打断逻辑\n      if (!newPrizes.length) return\n      newPrizes.forEach((cell, cellIndex) => {\n        if (!cell) return\n        const orderIndex = slot.order![cellIndex]\n        const prizesX = widthAndSpacing * cellIndex\n        const prizesY = heightAndSpacing * cellIndex\n        const [_x, _y, spacing] = this.displacement(\n          [cellX, prizesY, heightAndSpacing],\n          [prizesX, cellY, widthAndSpacing]\n        )\n        lengthOfCopy += spacing\n        // 绘制背景\n        const background = cell.background || _defaultStyle.background\n        if (hasBackground(background)) {\n          const borderRadius = this.getLength(has(cell, 'borderRadius') ? cell.borderRadius : _defaultStyle.borderRadius)\n          roundRectByArc(_ctx, _x, _y, cellWidth, cellWidth, borderRadius)\n          _ctx.fillStyle = background\n          _ctx.fill()\n        }\n        // 绘制图片\n        cell.imgs && cell.imgs.forEach((imgInfo, imgIndex) => {\n          const cellImg = get(this.ImageCache, `prizes.${orderIndex}.${imgIndex}`)\n          if (!cellImg) return\n          const [trueWidth, trueHeight] = this.computedWidthAndHeight(cellImg, imgInfo, cellWidth, cellHeight)\n          const [xAxis, yAxis] = [\n            _x + this.getOffsetX(trueWidth, cellWidth),\n            _y + this.getHeight(imgInfo.top, cellHeight)\n          ]\n          this.drawImage(_ctx, cellImg, xAxis, yAxis, trueWidth, trueHeight)\n        })\n      })\n      const [_x, _y, _w, _h] = this.displacement(\n        [cellX, 0, cellWidth, lengthOfCopy],\n        [0, cellY, lengthOfCopy, cellHeight]\n      )\n      let drawLen = lengthOfCopy\n      while (drawLen < maxOffHeight + lengthOfCopy) {\n        const [drawX, drawY] = this.displacement([_x, drawLen], [drawLen, _y])\n        this.drawImage(\n          _ctx, _offscreenCanvas,\n          _x, _y, _w, _h,\n          drawX, drawY, _w, _h\n        )\n        drawLen += lengthOfCopy\n      }\n    })\n  }\n\n  /**\n   * 绘制背景区域\n   */\n  protected drawBlocks (): SlotMachine['prizeArea'] {\n    const { config, ctx, _defaultConfig, _defaultStyle } = this\n    // 绘制背景区域, 并计算获取奖品区域\n    return this.prizeArea = this.blocks.reduce(({x, y, w, h}, block, blockIndex) => {\n      const [paddingTop, paddingBottom, paddingLeft, paddingRight] = computePadding(block)\n      const r = block.borderRadius ? this.getLength(block.borderRadius) : 0\n      // 绘制边框\n      const background = block.background || _defaultStyle.background\n      if (hasBackground(background)) {\n        roundRectByArc(ctx, x, y, w, h, r)\n        ctx.fillStyle = background\n        ctx.fill()\n      }\n      // 绘制图片\n      block.imgs && block.imgs.forEach((imgInfo, imgIndex) => {\n        const blockImg = get(this.ImageCache, `blocks.${blockIndex}.${imgIndex}`)\n        if (!blockImg) return\n        // 绘制图片\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(blockImg, imgInfo, w, h)\n        const [xAxis, yAxis] = [this.getOffsetX(trueWidth, w), this.getHeight(imgInfo.top, h)]\n        this.drawImage(ctx, blockImg, x + xAxis, y + yAxis, trueWidth, trueHeight)\n      })\n      return {\n        x: x + paddingLeft,\n        y: y + paddingTop,\n        w: w - paddingLeft - paddingRight,\n        h: h - paddingTop - paddingBottom\n      }\n    }, { x: 0, y: 0, w: this.boxWidth, h: this.boxHeight })\n  }\n\n  /**\n   * 绘制老虎机抽奖\n   */\n  protected draw (): void {\n    const { config, ctx, _defaultConfig, _defaultStyle } = this\n    // 触发绘制前回调\n    config.beforeDraw?.call(this, ctx)\n    // 清空画布\n    ctx.clearRect(0, 0, this.boxWidth, this.boxHeight)\n    // 绘制背景\n    const { x, y, w, h } = this.drawBlocks()!\n    // 绘制插槽\n    if (!this._offscreenCanvas) return\n    const { cellWidth, cellHeight, cellAndSpacing, widthAndSpacing, heightAndSpacing } = this\n    this.slots.forEach((slot, slotIndex) => {\n      // 绘制临界点\n      const _p = cellAndSpacing * slot.order!.length\n      // 调整奖品垂直居中\n      const start = this.displacement(-(h - cellHeight) / 2, -(w - cellWidth) / 2)\n      let scroll = this.scroll[slotIndex] + start\n      // scroll 会无限累加 1 / -1\n      if (scroll < 0) {\n        scroll = scroll % _p + _p\n      }\n      if (scroll > _p) {\n        scroll = scroll % _p\n      }\n      const [sx, sy, sw, sh] = this.displacement(\n        [cellWidth * slotIndex, scroll, cellWidth, h],\n        [scroll, cellHeight * slotIndex, w, cellHeight]\n      )\n      const [dx, dy, dw, dh] = this.displacement(\n        [x + widthAndSpacing * slotIndex, y, cellWidth, h],\n        [x, y + heightAndSpacing * slotIndex, w, cellHeight]\n      )\n      this.drawImage(ctx, this._offscreenCanvas!, sx, sy, sw, sh, dx, dy, dw, dh)\n    })\n  }\n\n  /**\n   * 刻舟求剑\n   */\n  private carveOnGunwaleOfAMovingBoat (): void {\n    const { _defaultConfig, prizeFlag, cellAndSpacing } = this\n    // 记录开始停止的时间戳\n    this.endTime = Date.now()\n    this.slots.forEach((slot, slotIndex) => {\n      const order = slot.order!\n      if (!order.length) return\n      const speed = slot.speed || _defaultConfig.speed\n      const direction = slot.direction || _defaultConfig.direction\n      const orderIndex = order.findIndex(prizeIndex => prizeIndex === prizeFlag)\n      const _p = cellAndSpacing * order.length\n      const stopScroll = this.stopScroll[slotIndex] = this.scroll[slotIndex]\n      let i = 0\n      while (++i) {\n        const endScroll = cellAndSpacing * orderIndex + (_p * i * direction) - stopScroll\n        const currSpeed = quad.easeOut(this.FPS, stopScroll, endScroll, _defaultConfig.decelerationTime) - stopScroll\n        if (Math.abs(currSpeed) > speed) {\n          this.endScroll[slotIndex] = endScroll\n          break\n        }\n      }\n    })\n  }\n\n  /**\n   * 对外暴露: 开始抽奖方法\n   */\n   public play (): void {\n    if (this.step !== 0) return\n    // 记录开始游戏的时间\n    this.startTime = Date.now()\n    // 清空中奖索引\n    this.prizeFlag = void 0\n    // 开始加速\n    this.step = 1\n    // 开始渲染\n    this.run()\n  }\n\n  public stop (index: number): void {\n    if (this.step === 0 || this.step === 3) return\n    // 设置中奖索引\n    this.prizeFlag = index\n    // 如果index是负数则停止游戏, 反之则传递中奖索引\n    if (index < 0) {\n      // 停止游戏\n      this.step = 0\n    } else {\n      // 进入匀速\n      this.step = 2\n    }\n  }\n\n  /**\n   * 让游戏动起来\n   * @param num 记录帧动画执行多少次\n   */\n  private run (num: number = 0): void {\n    const { rAF, step, prizeFlag, _defaultConfig, cellAndSpacing } = this\n    const { accelerationTime, decelerationTime } = _defaultConfig\n    // 游戏结束\n    if (this.step === 0) {\n      this.endCallback?.(this.prizes.find((prize, index) => index === prizeFlag) || {})\n      return\n    }\n    // 如果等于 -1 就直接停止游戏\n    if (prizeFlag === -1) return\n    // 计算最终停止的位置\n    if (this.step === 3 && !this.endScroll.length) this.carveOnGunwaleOfAMovingBoat()\n    // 计算时间间隔\n    const startInterval = Date.now() - this.startTime\n    const endInterval = Date.now() - this.endTime\n    // 分别计算对应插槽的加速度\n    this.slots.forEach((slot, slotIndex) => {\n      const order = slot.order\n      if (!order || !order.length) return\n      const _p = cellAndSpacing * order.length\n      const speed = Math.abs(slot.speed || _defaultConfig.speed)\n      const direction = slot.direction || _defaultConfig.direction\n      let scroll = 0, prevScroll = this.scroll[slotIndex]\n      if (step === 1 || startInterval < accelerationTime) { // 加速阶段\n        // 记录帧率\n        this.FPS = startInterval / num\n        const currSpeed = quad.easeIn(startInterval, 0, speed, accelerationTime)\n        // 加速到最大速度后, 即可进入匀速阶段\n        if (currSpeed === speed) {\n          this.step = 2\n        }\n        scroll = (prevScroll + (currSpeed * direction)) % _p\n      } else if (step === 2) { // 匀速阶段\n        // 速度保持不变\n        scroll = (prevScroll + (speed * direction)) % _p\n        // 如果有 prizeFlag 有值, 则进入减速阶段\n        if (prizeFlag !== void 0 && prizeFlag >= 0) {\n          this.step = 3\n          // 清空上一轮的位置信息\n          this.stopScroll = []\n          this.endScroll = []\n        }\n      } else if (step === 3 && endInterval) { // 减速阶段\n        // 开始缓慢停止\n        const stopScroll = this.stopScroll[slotIndex]\n        const endScroll = this.endScroll[slotIndex]\n        scroll = quad.easeOut(endInterval, stopScroll, endScroll, decelerationTime)\n        if (endInterval >= decelerationTime) {\n          this.step = 0\n        }\n      }\n      this.scroll[slotIndex] = scroll\n    })\n    this.draw()\n    rAF(this.run.bind(this, num + 1))\n  }\n\n  // 根据mode置换数值\n  private displacement<T> (a: T, b: T): T {\n    return this._defaultConfig.mode === 'horizontal' ? b : a\n  }\n\n  // 根据mode计算宽高\n  private displacementWidthOrHeight () {\n    const mode = this._defaultConfig.mode\n    const slotsLen = this.slots.length\n    const { colSpacing, rowSpacing } = this._defaultConfig\n    const { x, y, w, h } = this.prizeArea || this.drawBlocks()!\n    let cellWidth = 0, cellHeight = 0, widthAndSpacing = 0, heightAndSpacing = 0\n    if (mode === 'horizontal') {\n      cellHeight = this.cellHeight = (h - rowSpacing * (slotsLen - 1)) / slotsLen\n      cellWidth = this.cellWidth = cellHeight\n    } else {\n      cellWidth = this.cellWidth = (w - colSpacing * (slotsLen - 1)) / slotsLen\n      cellHeight = this.cellHeight = cellWidth\n    }\n    widthAndSpacing = this.widthAndSpacing = this.cellWidth + colSpacing\n    heightAndSpacing = this.heightAndSpacing = this.cellHeight + rowSpacing\n    if (mode === 'horizontal') {\n      this.cellAndSpacing = widthAndSpacing\n    } else {\n      this.cellAndSpacing = heightAndSpacing\n    }\n    return {\n      cellWidth,\n      cellHeight,\n      widthAndSpacing,\n      heightAndSpacing,\n    }\n  }\n\n  /**\n   * 获取相对宽度\n   * @param length 将要转换的宽度\n   * @param width 宽度计算百分比\n   * @return 返回相对宽度\n   */\n  private getWidth (\n    length: string | number | undefined,\n    width: number\n  ): number {\n    if (isExpectType(length, 'number')) return (length as number)\n    if (isExpectType(length, 'string')) return this.changeUnits(length as string, width)\n    return 0\n  }\n\n  /**\n   * 转换并获取高度\n   * @param height 将要转换的高度\n   * @param row 纵向合并的格子\n   * @return 返回相对高度\n   */\n  private getHeight (\n    length: string | number | undefined,\n    height: number\n  ): number {\n    if (isExpectType(length, 'number')) return (length as number)\n    if (isExpectType(length, 'string')) return this.changeUnits(length as string, height)\n    return 0\n  }\n\n  /**\n   * 获取相对(居中)X坐标\n   * @param width\n   * @return 返回x坐标\n   */\n  private getOffsetX (width: number, maxWidth: number): number {\n    return (maxWidth - width) / 2\n  }\n}\n"],"names":["String","prototype","includes","search","start","length","this","indexOf","Array","find","Object","defineProperty","value","predicate","TypeError","o","len","thisArg","arguments","k","kValue","call","isExpectType","param","_i","types","some","type","toString","slice","toLowerCase","get","data","strKeys","keys_1","split","res","has","key","hasOwnProperty","removeEnter","str","filter","s","join","hasBackground","color","toLocaleLowerCase","trim","test","alpha","exec","num","NaN","Number","computePadding","block","padding","replace","map","n","paddingTop","paddingBottom","paddingLeft","paddingRight","computeRange","rangeArr","ascendingArr","sum","reduce","prev","curr","push","random","Math","findIndex","splitText","ctx","text","getWidth","lineClamp","Infinity","lines","EndWidth","measureText","width","i","currWidth","maxWidth","getAngle","deg","PI","fanShapedByArc","minRadius","maxRadius","end","gutter","beginPath","r","maxGutter","maxStart","maxEnd","arc","lineTo","abs","sin","cos","toFixed","closePath","roundRectByArc","_a","x","y","w","h","min","moveTo","clip","img","canvas","document","createElement","getContext","height","scale","drawImage","blur","radius","ImageData","getImageData","matrix","sigma","ceil","sigma_2","sigma2_2","denominator","total","exp","getMatrix","console","log","putImageData","subs","Dep","sub","forEach","update","hasProto","def","obj","val","enumerable","writable","configurable","oldArrayProto","newArrayProto","create","method","args","apply","luckyOb","walk","dep","notify","isArray","getOwnPropertyNames","Observer","keys","defineReactive","observe","property","getOwnPropertyDescriptor","getter","setter","set","childOb","target","addSub","newVal","uid","$lucky","expr","cb","options","id","deep","path","segments","segment","parsePath","Watcher","dfs","traverse","oldVal","config","el","nodeType","divElement","flag","querySelector","canvasElement","appendChild","setAttribute","name","addEventListener","e","_this","handleClick","initWindowFunction","error","window","fn","wait","timeId","setTimeout","clearTimeout","throttle","resize","MutationObserver","documentElement","attributes","Lucky","beforeResize","setHTMLFontSize","setDpr","resetWidthAndHeight","zoomCanvas","boxWidth","boxHeight","htmlFontSize","getComputedStyle","fontSize","dpr","devicePixelRatio","offsetWidth","offsetHeight","getLength","style","overflow","_b","transform","rAF","requestAnimationFrame","callback","setInterval","clearInterval","timeout_1","src","info","resolveName","Promise","resolve","reject","imgObj_1","Image","onload","onerror","imgObj","drawImg","rectInfo","index","changeUnits","unit","unitFunc","px","rem","vw","innerWidth","otherUnitFunc","_offscreenCanvas","_ctx","clearRect","nums","params","opacity","imageData","handler","watchOpt","watcher","immediate","quad","t","b","c","d","_super","blocks","prizes","buttons","initData","initWatch","initComputed","beforeCreate","init","__extends","LuckyWheel","Radius","translate","draw","afterResize","prizeRadius","prizeDeg","prizeRadian","rotateDeg","maxBtnRadius","startTime","endTime","stopDeg","endDeg","FPS","prizeFlag","step","initLucky","$set","defaultConfig","defaultStyle","$computed","offsetDegree","speed","speedFunction","accelerationTime","decelerationTime","stopRange","fontColor","fontStyle","fontWeight","background","wordWrap","lengthLimit","$watch","newData","initImageCache","beforeInit","_c","afterInit","willUpdateImgs","imgs","prize","btn","imgName","willUpdate","allPromise","cellIndex","imgInfo","imgIndex","loadAndCacheImg","all","then","isPointInPath","offsetX","offsetY","startCallback","cellName","cell","ImageCache","loadImg","currImg","formatter","catch","err","maxHeight","trueWidth","trueHeight","getHeight","_defaultConfig","_defaultStyle","beforeDraw","blockIndex","fillStyle","fill","blockImgs","blockImg","computedWidthAndHeight","getOffsetX","top","xAxis","yAxis","save","rotate","restore","getFontX","line","getFontY","font","lineIndex","lineHeight","prizeIndex","currMiddleDeg","prizeHeight","prizeImgs","prizeImg","fonts","tan","fillText","btnIndex","max","pointer","btnImgs","btnImg","afterDraw","Date","now","prevSpeed","prevDeg","currSpeed","run","item","range","carveOnGunwaleOfAMovingBoat","startInterval","endInterval","stop","bind","endCallback","LuckyGrid","cellWidth","cellHeight","currIndex","stopIndex","endIndex","demo","timer","rows","cols","button","activeStyle","borderRadius","shadow","__spreadArray","getGeometricProperty","col","row","rect","request","defaultImg","activeImg","_activeStyle","cells","prizeArea","handleBackground","isActive","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","cellImgs","cellImg","renderImg","size","maxWidth_1","context","shift","direction","getLenOfTanDeg","gradient","createLinearGradient","addColorStop","getLinearGradient","prevIndex","SlotMachine","slots","mode","rowSpacing","colSpacing","drawOffscreenCanvas","drawBlocks","prizesLen","displacementWidthOrHeight","widthAndSpacing","heightAndSpacing","defaultOrder","v","maxOffWidth","maxOffHeight","slot","slotIndex","scroll","order","currLen","_d","getOffscreenCanvas","cellX","cellY","lengthOfCopy","newPrizes","arr","getSortedArrayByIndex","orderIndex","prizesX","prizesY","displacement","_x","_y","spacing","_w","_h","drawLen","drawX","drawY","cellAndSpacing","_p","sx","sy","sw","sh","dx","dy","dw","dh","stopScroll","endScroll","prevScroll","a","slotsLen"],"mappings":"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"}